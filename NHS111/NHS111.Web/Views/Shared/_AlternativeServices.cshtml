@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.FromExternalServices
@model  OutcomeViewModel

<div class="alternative-care service-hidden">
    @{
        var result = Model.DosCheckCapacitySummaryResult;
    }

    @if (!Model.UserInfo.CurrentAddress.IsInPilotArea)
    {
        <p id="OutsidePilot">The postcode you entered is outside the Leeds trial area, so we can’t look up other services for you</p>
        <p>If you can’t @Html.Raw(Model.OutcomeGroup.Text), please call 111 for advice</p>
    }
    else if (Model.GroupedDosServices.Any())
    {
        <h2>@Html.Raw((!ViewData.Keys.Contains("Title") ? "If you can't " + Model.OutcomeGroup.Text: ViewData["Title"]))</h2>
        <div id="availableServices">
            @foreach (var groupedService in Model.GroupedDosServices)
            {
                if (groupedService.OnlineDOSServiceType == OnlineDOSServiceType.Callback) { @Html.Partial("_CallbackServices", Model, ViewData)}
                if (groupedService.OnlineDOSServiceType == OnlineDOSServiceType.GoTo) { @Html.Partial("_GotoServices", Model, ViewData)}
                if (groupedService.OnlineDOSServiceType == OnlineDOSServiceType.PublicePhone) { @Html.Partial("_PublicPhoneServices", Model, ViewData)}
            }
        </div>
    }
    else if (result != null && result.ServicesUnavailable)
    {
        <p id="NoDosResults">Sorry, no other services are currently available for the postcode you entered</p>
        <p>If you can’t @Html.Raw(Model.OutcomeGroup.Text), you should call 111 for advice</p>
    }
</div>