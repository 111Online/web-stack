@using NHS111.Models.Models.Web
@model  OutcomeViewModel

<div class="alternative-care service-hidden">
    @{
        var services = Model.DosCheckCapacitySummaryResult.Success.Services;
    }

        @if (services.Any())
        {
            <h3>@Html.Raw((!ViewData.Keys.Contains("Title") ? "If you can't see your GP" : ViewData["Title"]))</h3>
            <div id="availableServices">

                @if (services.FirstOrDefault(s => s.CallbackEnabled) != null) //first service is a call back
                {
                    @Html.Partial("_CallbackServices", Model)
                    @Html.Partial("_GotoServices", Model)
                }
                else
                {
                    @Html.Partial("_GotoServices", Model)
                    @Html.Partial("_CallbackServices", Model)
                }
            </div>
        }
        else if (ViewData.Keys.Contains("NoServicesMessage1") && ViewData.Keys.Contains("NoServicesMessage2"))
        {
            <h4>@Html.Raw(ViewData["NoServicesMessage1"])</h4>
            <h4>@Html.Raw(ViewData["NoServicesMessage2"])</h4>
        }
        else
        {
            <h4>Sorry, no other services are currently available for the postcode you entered</h4>
            <h4>If you can’t @Html.Raw(Model.OutcomeGroup.Text), you should call 111 for advice</h4>
        }
    </div>

<script>
    $(function () {
        $("#availableServices").accordion({ collapsible: true, active: 'none', heightStyle: "content" });
    });
</script>
