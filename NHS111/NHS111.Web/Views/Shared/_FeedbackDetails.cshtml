@model NHS111.Models.Models.Domain.Feedback
@{ Model.DateAdded = DateTime.Now; }

<div class="feedback-wrapper">
    <div class="feedback-container feedback-container--open">
        <div class="feedback-banner">
            <a href="#" class="feedback-btn">No Thanks!</a>
            <form id="FeedbackForm" action="@Url.Action("SubmitFeedback", "Feedback")">
                @*<h2 class="font-med" style="color:white">Help us improve 111 online</h2>*@
                <p class="feedback-message">
                    Help us improve 111 online @*<a ng-show="options.link" class="feedback-more_info" href="#null">More info</a>*@
                </p>
                <p class="feedback-message">
                    If you’d like to give your views on helping us improve 111 online, please use the form below. @*<a ng-show="options.link" class="feedback-more_info" href="#null">More info</a>*@
                </p>
                <div class="feedback-form">
                    @Html.TextAreaFor(m => m.Text, new { @placeholder = "Feedback", @Value = "", @class = "feedback-input", @maxlength = "8000" })
                    <a class="feedback-btn feedback-submit" id="btnFeedback" onclick="SubmitFeedback(this);">Submit Feedback</a>
                </div>
                @*<div id="FeedbackDetails">
                    <p>If you’d like to give your views on helping us improve 111 online, please use the form below.</p>
                    <div>
                        @Html.TextAreaFor(m => m.Text, new { @placeholder = "Feedback", @Value = "", @class = "feedback-input", @maxlength = "8000" })
                        <input class="button feedback-submit" id="btnFeedback" type="button" name="btnFeedback" value="Submit Feedback" onclick=" SubmitFeedback(this); " />
                    </div>
                </div>*@

                @Html.HiddenFor(m => m.UserId)
                @Html.HiddenFor(m => m.PageId)
            </form>
        </div>
    </div>
</div>
<script>

    $('.feedback-dismiss').click(function () {
        $('.feedback-wrapper').slideToggle();
    });

    $('.feedback-input').focus(function () {
        $(this).animate({
            width: "70%",
            height: "70%"
        });
    });

    $(document).ready(function () {
        var $userId = $("#UserId");
        $userId.val($.cookie("userId"));
    });

    $("#Text").keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        var RETURNKEY = 13;
        if (keycode === RETURNKEY) {
            $("#btnFeedback").click();
            return false;
        }
    });

    function SubmitFeedback(btnClicked) {
        if ($("#Text").val() !== "") {
            var $form = $(btnClicked).parents("form");
            $form[0][0].value = $('<div/>').text($form[0][0].value).html();
            var detailsDiv = $("#FeedbackDetails");
            $(detailsDiv).slideToggle(600);
            $.ajax({
                type: "POST",
                url: $form.attr("action"),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    alert(error);
                    $(detailsDiv).slideToggle(600);
                    //do something about the error
                },
                success: function (response) {
                    $(detailsDiv).html('<p>' + response.Message + '</p>');
                    $(detailsDiv).slideToggle(600);
                }
            });
            return false;
        }
    }
</script>
