@model NHS111.Models.Models.Domain.Feedback
@{ Model.DateAdded = DateTime.Now; }


<form id="FeedbackForm" class="feedback-form" action="@Url.Action("SubmitFeedback", "Feedback")">

    <h2 class="font-med" style="color:white">Help us improve 111 online</h2>
    <p>Please don’t include personal information.</p>
    <div id="FeedbackDetails">
        <div class="row large" style="margin-top: 20px;">
            <label>
                <span>Feedback</span><br />
                @Html.TextBoxFor(m => m.Text, new { @placeholder = "Feedback", @Value = "", @class = "feedback-input", style = "width:400px;", @maxlength="8000" })
            </label>
        </div>
        <div class="row small">
            <input class="button feedback-submit" style="font-size: 16px; margin: 5px;" id="btnFeedback" type="button" name="btnFeedback" value="Submit Feedback" onclick=" SubmitFeedback(this); " />
        </div>
    </div>
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.PageId)
</form>

<script>

    $(document).ready(function () {
        var $userId = $("#UserId");
        $userId.val($.cookie("userId"));
    });

    function SubmitFeedback(btnClicked) {
        var $form = $(btnClicked).parents('form');
        var detailsDiv = $('#FeedbackDetails');
        $(detailsDiv).slideToggle(600);
        $.ajax({
            type: "POST",
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                alert(error);
                $(detailsDiv).slideToggle(600);
                //do something about the error
            },
            success: function (response) {
                $(detailsDiv).html(response.Message);
                $(detailsDiv).slideToggle(600);
            }
        });

        return false;
    }
</script>