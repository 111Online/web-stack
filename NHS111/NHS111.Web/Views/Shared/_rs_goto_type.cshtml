@using Newtonsoft.Json
@using NHS111.Models.Models.Web
@model  OutcomeViewModel
@{
    var recommendedService = Model.RecommendedService;
}
<div class="service-details-container nhsuk-u-margin-bottom-4">
    <div class="service-details">
        <div class="service-details__address">
            <p>
                @WebUtility.HtmlDecode(recommendedService.PublicName)<br />
                @foreach (var address in recommendedService.AddressLines)
                {
                    @WebUtility.HtmlDecode(address)<br />
                }
            </p>
        </div>
        <div class="service-details__hours">
            @Html.Partial("_ServiceOpeningTimes", recommendedService, ViewData)
        </div>
    </div>
    @*
        If an appointment is required its a public phone type only
        This is a go to so no contact details
        <div class="subroutine measure">
            <div class="callout callout--attention">
                You must call <b>@recommendedService.ContactDetails</b> to make an appointment
            </div>
        </div>
        
        .cards--goto is used by javascript to insert the map beforehand.
    *@
    <div class="service-details cards--goto">
        <p class="service-details__distance">
            @recommendedService.Distance miles away
        </p>
        <div class="service-details__directions">
            @using (Html.BeginForm("GetDirections", "Outcome", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.SessionId)
                @Html.HiddenFor(m => m.JourneyId)
                @Html.HiddenFor(m => m.JourneyJson)
                @Html.HiddenFor(m => m.Id)
                @Html.Hidden("SelectedServiceId", recommendedService.Id)
                @Html.Hidden("SelectedServiceName", recommendedService.Name)
                @Html.Hidden("SelectedServiceAddress", recommendedService.Address)
                <button class="button--link card__directions--fallback" type="submit">Get directions</button>
                <p><a class="card__directions" style="display: none;" target="_blank" href="@string.Format("https://www.google.com/maps/dir/?api=1&origin={0}&destination={1}", Model.CurrentPostcode, recommendedService.Address)">Get directions <span class="nhsuk-u-font-size-16">(opens a new tab or window)</span></a></p>
            }
        </div>
    </div>
    </div>
    @{
        var mapService = JsonConvert.SerializeObject(new[] { Model });
    }
    <script>
    window.mapServices = @Html.Raw(mapService);
    window.currentPostcode = "@Html.Raw(Model.CurrentPostcode)";
    </script>
