@using Newtonsoft.Json
@using NHS111.Models.Models.Web
@model  NHS111.Models.Models.Web.AddressInfoViewModel
<script src="~/content/Js/vendor/spin.min.js"></script>
<link rel="stylesheet" href="~/content/styles/vendor/jquery-ui.css">


<label>
    Postcode of home address
</label>
<p class="validation-error-msg" id="postcode-validation-message">A valid UK postcode is required</p>
<div class="inline-details">
    @Html.TextBox("postcode-find", "", new {@class = "form-control form-control-8-chars", placeholder = "eg. SE1"})
    <input type="button" class="button find-address" id="findMyAddress" value="Find my address"/>

</div>
<a class="button button-next button-link" href="javascript:void(0);" id="manual-entry-link">Enter address manually</a>
<p class="manual-entry-text" id="manual-entry-text">Enter address manually</p>
<div id="addressPanel" class="address-panel">
    <label>
        Street
    </label>
    <div class="inline-details">
        @Html.TextBoxFor(m => m.AddressLine1, new {@class = "form-control", placeholder = "Address Line 1"})
    </div>
    <div class="inline-details">
        @Html.TextBoxFor(m => m.AddressLine2, new {@class = "form-control", placeholder = "Address Line 2"})
    </div>
    <label>
        City
    </label>
    <div class="inline-details">
        @Html.TextBoxFor(m => m.City, new {@class = "form-control", placeholder = "City"})
    </div>
    <label>
        County
    </label>
    <div class="inline-details">
        @Html.TextBoxFor(m => m.County, new {@class = "form-control", placeholder = "County"})
    </div>
    <label>
        Postcode
    </label>
    <div class="inline-details">
        @Html.TextBoxFor(m => m.PostCode, new {@class = "form-control", placeholder = "Postcode"})
    </div>
</div>

<div id="loadingPostcode" style="display: none;">
    <div id="loadingcontent">
        <p id="loadingspinner">
            Searching for addresses matching <span id="postcodeSpan"></span>...
        </p>
    </div>
</div>

<div id="AddressList" style="display: none;">
    <label>Pick an address</label>
    <label class="select-label">
        <select class="select-address" id="AddressSelect">
        </select>
    </label>
</div>

<!--Spinner script-->
<script type="text/javascript">
    $(function () {
        var addresses = [];
        $("#findMyAddress").click(function () {
            $("#manual-entry-link").show();
            resetElements();
            var $postCode = $("#AddressInfoViewModel_postcode-find").val();
            if (!valid_postcode($postCode)) {
                invalidatePostCode();
                return;
            }
            $("#postcodeSpan").text($postCode);
            $("#loadingPostcode").fadeIn();
            var opts = {
                lines: 12, // The number of lines to draw
                length: 7, // The length of each line
                width: 4, // The line thickness
                radius: 10, // The radius of the inner circle
                color: '#000', // #rgb or #rrggbb
                speed: 1, // Rounds per second
                trail: 60, // Afterglow percentage
                shadow: false, // Whether to render a shadow
                hwaccel: false // Whether to use hardware acceleration
            };
            var target = document.getElementById('loadingPostcode');
            var spinner = new Spinner(opts).spin(target);
            $.ajax({
                type: "POST",
                url: "@Url.Action("PostcodeLookup", "Outcome")",
                data: { postCode: $postCode },
                success: function (response) {
                    addresses = response;
                    var select = $("#AddressSelect");
                    if (addresses.length > 0) {
                        select.empty();
                        select.append($("<option />").val(0).text("Please choose..."));
                        $.each(response, function () {
                            var text = this.AddressLine1;
                            select.append($("<option />").val(this.UPRN).text(text));
                        });
                        $("#AddressList").show();
                    }
                    select.change(function () {
                        var selectedAddress = $("#AddressSelect option:selected").attr("value");
                        if (selectedAddress == "0")
                            return;
                        var result = $.grep(addresses, function (e) { return e.UPRN == selectedAddress; });
                        if (result.length < 1) {
                            console.error("Address selected with id " + selectedAddress + " which isn't in list of addresses.");
                            return;
                        }
                        setFields(result[0]);
                        $("#manual-entry-link").hide();
                        $("#AddressList").hide();
                        $("#addressPanel").show();
                        $("#manual-entry-text").show();
                    });
                    $("#loadingPostcode").fadeOut();
                },
                timeout: 5000,
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.error("Status: " + textStatus); alert("Error: " + errorThrown);
                    $("#AddressList").hide();
                },
                complete: function () {
                    spinner.stop();
                    $("#loadingPostcode").fadeOut();
                }
            });
        });

        $("#manual-entry-link").click(function () {
            $("#manual-entry-text").show();
            $("#addressPanel").show();
            $("#AddressList").hide();
            $(this).hide();
        });
    });

    function resetElements() {
        $("#addressPanel").hide();
        $("#AddressList").hide();
        $("#postcode-validation-message").hide();
        $("#AddressInfoViewModel_postcode-find").removeClass("validation-error-input");
        $("#manual-entry-text").hide();
        setFields("@JsonConvert.SerializeObject(new AddressInfoViewModel())");
    }

    function setFields(result) {
        $("#AddressInfoViewModel_HouseNumber").val(result.HouseNumber);
        $("#AddressInfoViewModel_AddressLine1").val(result.AddressLine1);
        $("#AddressInfoViewModel_AddressLine2").val(result.AddressLine2);
        $("#AddressInfoViewModel_City").val(result.City);
        $("#AddressInfoViewModel_County").val(result.County);
        $("#AddressInfoViewModel_PostCode").val(result.PostCode);
    }

    function invalidatePostCode() {
        $("#postcode-validation-message").show();
        $("#AddressInfoViewModel_postcode-find").addClass("validation-error-input");
    }

    function valid_postcode(postcode) {
        postcode = postcode.replace(/\s/g, "");
        var regex = /^[A-Z]{1,2}[0-9]{1,2} ?[0-9][A-Z]{2}$/i;
        return regex.test(postcode);
    }

</script>