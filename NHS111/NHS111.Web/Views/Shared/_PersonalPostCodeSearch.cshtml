@using Newtonsoft.Json
@using NHS111.Models.Models.Web
@model  PersonalInfoAddressViewModel

<div class="find-address-panel">
    <label>
        Postcode of current address
    </label>
    <p class="validation-error-msg" id="postcode-validation-message">A valid UK postcode is required</p>
    <div class="inline-details">
        @Html.TextBox("postcode-find", "", new { @class = "form-control form-control-8-chars", placeholder = "eg. SE1" })
        <input type="button" class="button find-address" id="findMyAddress" value="Find my address" />
    </div>
    <a class="button button-next button-link" href="javascript:void(0);" id="manual-entry-link">Enter address manually</a>
</div>

<div id="addressPanel" class="address-panel">
    <p class="manual-entry-text" id="manual-entry-text">Enter address manually</p>
    <label>
        Street
    </label>
    <div class="inline-details">
        <div>@Html.ValidationMessageFor(m => m.AddressLine1, "Please enter the first line of your address")</div>
        @Html.TextBoxFor(m => m.AddressLine1, new {@class = "form-control", placeholder = "Address Line 1"})
    </div>
    <div class="inline-details">
        @Html.TextBoxFor(m => m.AddressLine2, new {@class = "form-control", placeholder = "Address Line 2"})
    </div>
    <label>
        City
    </label>
    <div class="inline-details">
        <div>@Html.ValidationMessageFor(m => m.City, "Please enter a city")</div>
        @Html.TextBoxFor(m => m.City, new {@class = "form-control", placeholder = "City"})
    </div>
    <label>
        County
    </label>
    <div class="inline-details">
        @Html.TextBoxFor(m => m.County, new {@class = "form-control", placeholder = "County"})
    </div>
    <label>
        Postcode
    </label>
    <div class="inline-details">
        <div>@Html.ValidationMessageFor(m => m.Postcode)</div>
        @Html.TextBoxFor(m => m.Postcode, new {@class = "form-control", placeholder = "Postcode"})
    </div>
</div>

<div id="AddressList" style="display: none;">
    <label>Pick an address</label>
    <label class="select-label">
        <select class="select-address" id="AddressSelect">
        </select>
    </label>
</div>

<script type="text/javascript">
    $(".find-address-panel").show();
    $(".address-panel").hide();
    $(function () {
        var addresses = [];
        $("#findMyAddress").click(function () {
            $("#manual-entry-link").show();
            resetElements();
            var $postCode = $("#AddressInfoViewModel_postcode-find").val();
            if (!valid_postcode($postCode)) {
                invalidatePostCode();
                return;
            }
            startPageLoadingIndicator('Searching for addresses matching ' + $postCode + '...')
            $.ajax({
                type: "POST",
                url: "@Url.Action("PostcodeLookup", "Outcome")",
                data: { postCode: $postCode },
                success: function (response) {
                    addresses = response;
                    var select = $("#AddressSelect");
                    if (addresses.length > 0) {
                        select.empty();
                        select.append($("<option />").val(0).text("Please choose..."));
                        $.each(response, function () {
                            var text = this.AddressLine1;
                            select.append($("<option />").val(this.UPRN).text(text));
                        });
                        $("#AddressList").show();
                    }
                    select.change(function () {
                        var selectedAddress = $("#AddressSelect option:selected").attr("value");
                        if (selectedAddress == "0")
                            return;
                        var result = $.grep(addresses, function (e) { return e.UPRN == selectedAddress; });
                        if (result.length < 1) {
                            console.error("Address selected with id " + selectedAddress + " which isn't in list of addresses.");
                            return;
                        }
                        setFields(result[0]);
                        $("#manual-entry-link").hide();
                        $("#AddressList").hide();
                        $(".address-panel").show();
                    });
                },
                timeout: 5000,
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.error("Status: " + textStatus); alert("Error: " + errorThrown);
                    $("#AddressList").hide();
                },
                complete: function () {
                    stopPageLoadingIndicator()
                }
            });
        });

        $("#manual-entry-link").click(function () {
            $(".address-panel").show();
            $("#AddressList").hide();
            $(this).hide();
        });
    });

    function resetElements() {
        $(".address-panel").hide();
        $("#AddressList").hide();
        $("#postcode-validation-message").hide();
        $("#AddressInfoViewModel_postcode-find").removeClass("validation-error-input");
        setFields("@JsonConvert.SerializeObject(new AddressInfoViewModel())");
    }

    function setFields(result) {
        $("#AddressInfoViewModel_HouseNumber").val(result.HouseNumber);
        $("#AddressInfoViewModel_AddressLine1").val(result.AddressLine1);
        $("#AddressInfoViewModel_AddressLine2").val(result.AddressLine2);
        $("#AddressInfoViewModel_City").val(result.City);
        $("#AddressInfoViewModel_County").val(result.County);
        $("#AddressInfoViewModel_Postcode").val(result.Postcode);
    }

    function invalidatePostCode() {
        $("#postcode-validation-message").show();
        $("#AddressInfoViewModel_postcode-find").addClass("validation-error-input");
    }

    function valid_postcode(postcode) {
        postcode = postcode.replace(/\s/g, "");
        var regex = /^[A-Z]{1,2}[0-9]{1,2} ?[0-9][A-Z]{2}$/i;
        return regex.test(postcode);
    }

</script>