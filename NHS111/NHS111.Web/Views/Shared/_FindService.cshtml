@model  NHS111.Models.Models.Web.OutcomeViewModel
@{
    var error = Model.DosCheckCapacitySummaryResult.HasNoServices;
}
<div class="findservice-form">

    @using (Html.BeginForm("ServiceDetails", "Outcome", FormMethod.Post))
    {
        @Html.HiddenFor(x => Model.Id)
        @Html.HiddenFor(x => Model.JourneyJson)
        @Html.HiddenFor(x => Model.PathwayId)
        @Html.HiddenFor(x => Model.PathwayNo)
        @Html.HiddenFor(x => Model.SymptomGroup)
        @Html.HiddenFor(x => Model.UserInfo.Age)
        @Html.HiddenFor(x => Model.UserInfo.Gender)
        @Html.HiddenFor(x => Model.SymptomDiscriminatorCode)
        @Html.HiddenFor(x => Model.Title)
        @Html.HiddenFor(x => Model.SessionId)
        @Html.HiddenFor(x => Model.TimeFrameText)
        @Html.HiddenFor(x => Model.SymptomDiscriminator.ReasoningText)
        @Html.HiddenFor(x => Model.OutcomeGroup.Id)
        @Html.HiddenFor(x => Model.OutcomeGroup.Text)
        @Html.Hidden("OutcomeGroup.Label", (!ViewData.Keys.Contains("Label") ? "Services" : ViewData["Label"]))
        @Html.Hidden("CurrentView", ((RazorView)ViewContext.View).ViewPath)
        for (var i = 0; i < Model.WorseningCareAdvice.Items.Count; ++i)
        {
            @Html.HiddenFor(m => m.WorseningCareAdvice.Items[i].Id)
            @Html.HiddenFor(m => m.WorseningCareAdvice.Items[i].OrderNo)
            @Html.HiddenFor(m => m.WorseningCareAdvice.Items[i].Text)
        }

        var careAdvices = Model.CareAdvices.ToList();
        for (var i = 0; i < careAdvices.Count; ++i)
        {
            @Html.Hidden(string.Format("CareAdvices[{0}].Id", i), @WebUtility.HtmlDecode(careAdvices[i].Id))
            @Html.Hidden(string.Format("CareAdvices[{0}].Keyword", i), @WebUtility.HtmlDecode(careAdvices[i].Keyword))
            @Html.Hidden(string.Format("CareAdvices[{0}].Title", i), @WebUtility.HtmlDecode(careAdvices[i].Title))
            for (var j = 0; j < careAdvices[i].Items.Count; ++j)
            {
                @Html.Hidden(string.Format("CareAdvices[{0}].Items[{1}].Id", i, j), @WebUtility.HtmlDecode(careAdvices[i].Items[j].Id))
                @Html.Hidden(string.Format("CareAdvices[{0}].Items[{1}].OrderNo", i, j), careAdvices[i].Items[j].OrderNo)
                @Html.Hidden(string.Format("CareAdvices[{0}].Items[{1}].Text", i, j), @WebUtility.HtmlDecode(careAdvices[i].Items[j].Text))
            }
        }

        <div class="findservice">
            <h3>@Html.Raw((!ViewData.Keys.Contains("Title") ? "Find a Healthcare provider" : ViewData["Title"]))</h3>
            <div class="section-margin">
                @if (error) {
                    <p class="error">No results could be found for that postcode. Please check and try again.</p>
                }
                @Html.LabelFor(m => m.UserInfo.CurrentAddress.PostCode, "Postcode")
                @Html.TextBoxFor(m => m.UserInfo.CurrentAddress.PostCode, new { @class = "form-control " + (error ? "error" : "") })

                <input class="button button-next" type="submit" name="DosResults" value="@Html.Raw(ViewData["ButtonText"])">

            </div>
        </div>
    }

</div>