@model  NHS111.Models.Models.Web.OutcomeViewModel
@{
    var error = Model.DosCheckCapacitySummaryResult.HasNoServices;
}
<section>
    <div class="findservice-form">

        @using (Html.BeginForm(ViewData.ContainsKey("ITK") ? "ServiceList" : "ServiceDetails", "Outcome", FormMethod.Post))
        {
            @Html.HiddenFor(x => Model.Id)
            @Html.HiddenFor(x => Model.JourneyJson)
            @Html.HiddenFor(x => Model.PathwayId)
            @Html.HiddenFor(x => Model.JourneyId)
            @Html.HiddenFor(x => Model.PathwayNo)
            @Html.HiddenFor(x => Model.SymptomGroup)
            @Html.HiddenFor(x => Model.UserInfo.Demography.Age)
            @Html.HiddenFor(x => Model.UserInfo.Demography.Gender)
            @Html.HiddenFor(x => Model.SymptomDiscriminatorCode)
            @Html.HiddenFor(x => Model.Title)
            @Html.HiddenFor(x => Model.SessionId)
            @Html.HiddenFor(x => Model.TimeFrameText)
            @Html.HiddenFor(x => Model.SymptomDiscriminator.ReasoningText)
            @Html.HiddenFor(x => Model.OutcomeGroup.Id)
            @Html.HiddenFor(x => Model.OutcomeGroup.Text)
            @Html.Hidden("OutcomeGroup.Label", (!ViewData.Keys.Contains("Label") ? "Services" : ViewData["Label"]))
            @Html.Hidden("CurrentView", ((RazorView)ViewContext.View).ViewPath)
            @Html.HiddenFor(x => x.DispositionTime)
            @Html.HiddenFor(x => x.TimeFrameMinutes)
            @Html.HiddenFor(x => x.WaitTimeText)
            @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
            
            <div class="findservice">
                @Html.Raw((!ViewData.Keys.Contains("Title") ? null : string.Format("<h3>{0}</h3>", ViewData["Title"])))
                <div class="section-margin">
                    @if (error)
                {
                    <p class="error">Sorry, no results were found for this postcode.</p>
                    <p>Please check you have entered the postcode correctly, then try again. <br/><br/> If the search still gives no results, please call 111 for advice.</p>
                    <br/>
                    }
                    @Html.ValidationMessageFor(m => m.UserInfo.CurrentAddress.Postcode)
                    @Html.LabelFor(m => m.UserInfo.CurrentAddress.Postcode, "Postcode")
                    @Html.TextBoxFor(m => m.UserInfo.CurrentAddress.Postcode, new { @class = "form-control " + (error ? "error" : "") })
                    <input class="button button-next" type="submit" name="DosResults" value="@Html.Raw(ViewData["ButtonText"])">

                </div>
            </div>
        }

    </div>
</section>