@using NHS111.Models.Models.Domain
@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.Elements
@model  OutcomeViewModel
@{
    var recommendedService = Model.RecommendedService;
    var isOtherService = ViewData.ContainsKey("IsOtherService");
    var showServiceDescriptionInDetails = !string.IsNullOrEmpty(recommendedService.ServiceTypeDescription) && isOtherService;
}
<div class="service-details nhsuk-u-margin-bottom-4">
    @if (showServiceDescriptionInDetails)
    {
        <p class="service-listing__info">
            @recommendedService.ServiceTypeDescription
        </p>
        <hr />
    }
    <div class="service-details__address">
        <p>
            @Html.Raw(recommendedService.GetServiceDisplayHtml())
        </p>
    </div>
    <div class="service-details__hours nhsuk-u-margin-bottom-4">
        @Html.Partial("_ServiceOpeningTimes", recommendedService, ViewData)
    </div>
    <p class="service-details__distance">@WebUtility.HtmlDecode(recommendedService.Distance) miles away</p>
    <div class="service-details__directions">
        @{
            var form = Model.IsEmergencyPrescriptionOutcome
                ? Html.BeginForm("ReferralExplanation", "Outcome", FormMethod.Post)
                : Html.BeginForm("PersonalDetails", "PersonalDetails", FormMethod.Post);
        }
        @using (form)
        {
            @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
            @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
            @Html.Partial("_CommonHiddenFieldsRecommendedServiceViewModel", Model.RecommendedService, new ViewDataDictionary() {TemplateInfo = new TemplateInfo() {HtmlFieldPrefix = "RecommendedService"}})
            @Html.Hidden("SelectedServiceId", @recommendedService.Id)
            <p class="service-details__hint">This service needs some more details from you.</p>

            @Html.Partial("_ActionButton", new ActionLinkViewModel() {Text = "Refer me to this service"})
        }
    </div>
</div>