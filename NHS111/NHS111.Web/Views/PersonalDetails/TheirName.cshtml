@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.ITK
@inherits NHS111.Web.Views.Shared.SurveyLinkView<PersonalDetailViewModel>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
}

@section Title {
    Enter Personal Details
}

@section HeadTop {
    @{ var url = string.Format("/outcome/{0}/{1}/{2}/itk/personaldetails/{3}/{4}", Url.Encode(Model.PathwayNo), Url.Encode(Model.OutcomeGroup.Text), Url.Encode(Model.Id), Url.Encode(Model.SelectedServiceId), Model.OutcomeGroup.IsCoronaVirus ? "Covid-Test-kit": Url.Encode(Model.SelectedService.Name)); }
    <script>
        var pageId = '@Model.Id';
        dataLayer = [
        {
            'virtualPageUrl': '@url',
            'virtualPageTitle': 'Personal Details'
        }];
    </script>
}

@{
    var dataDictionary = ViewContext.ViewData;
    dataDictionary.Add(new KeyValuePair<string, object>("LaunchPage", "personal-details"));
}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageData = new PageDataViewModel(PageDataViewModel.PageType.PersonalDetails, Model) })
}

<div class="nhsuk-core">

    @using (Html.BeginForm("DateOfBirth", "PersonalDetails", FormMethod.Post, new { id = "theirNameForm" }))
    {
        @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
        @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
        @Html.HiddenFor(m => m.SelectedServiceId)
        @Html.HiddenFor(m => m.UserInfo.TelephoneNumber)
        @Html.HiddenFor(m => m.UserInfo.DoB)
        @Html.HiddenFor(m => m.PatientInformantDetails.Informant)
        @Html.HiddenFor(m => m.PatientInformantDetails.PatientName.Forename)
        @Html.HiddenFor(m => m.PatientInformantDetails.PatientName.Surname)
        @Html.HiddenFor(m => m.PatientInformantDetails.InformantName.Forename)
        @Html.HiddenFor(m => m.PatientInformantDetails.InformantName.Surname)
        <section class="measure">
            <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.Informant") ? "" : "form-group-error")">
                <fieldset>
                    <legend class="nhsuk-fieldset__legend nhsuk-fieldset__legend--l nhsuk-u-margin-bottom-4">
                        <h2 class="nhsuk-fieldset__heading">What is their name?</h2>
                    </legend>
                    <div>
                        <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.PatientName.Forename") ? "" : "form-group-error")">
                            <label for="@Html.IdFor(m => m.PatientInformantDetails.PatientName.Forename)">First name</label>
                            @Html.ValidationMessageFor(m => m.PatientInformantDetails.PatientName.Forename, "Enter your first name")
                            @Html.TextBoxFor(m => m.PatientInformantDetails.PatientName.Forename, new { @class = "form-control form-control-15-chars" })
                        </div>
                        <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.PatientName.Surname") ? "" : "form-group-error")">
                            <label for="@Html.IdFor(m => m.PatientInformantDetails.PatientName.Surname)">Last name</label>
                            @Html.ValidationMessageFor(m => m.PatientInformantDetails.PatientName.Surname, "Enter your last name")
                            @Html.TextBoxFor(m => m.PatientInformantDetails.PatientName.Surname, new { @class = "form-control form-control-15-chars" })
                        </div>
                    </div>

                </fieldset>
            </div>


            <script type="text/javascript">
                jQuery(function () {
                    var formSubmitted = false;

                    AddAdapter('personname');

                    // This uses jQuery Validator's internal check method, this is undocumented functionality.
                    // The reason for using it is that the public .valid() method has bad side effects when trying to
                    // check validity of a single element.
                    function isValid(el) {
                        return $("form").validate().check(el);
                    }

                    jQuery.validator.addMethod('personname', function (value, element, params) {
                        var personelement = $(element);
                        if ($('input[name="PatientInformantDetails.Informant"]:checked').val() == "Self" &&
                            personelement.attr('name').startsWith("PatientInformantDetails.SelfName")) {
                            return (value) !== "";
                        }
                        if ($('input[name="PatientInformantDetails.Informant"]:checked').val() == "ThirdParty" &&
                            (personelement.attr('name').startsWith("PatientInformantDetails.PatientName")
                                || (personelement.attr('name').startsWith("PatientInformantDetails.InformantName")))) {
                            return (value) !== "";
                        }
                        return true;

                    });

                    jQuery("#theirNameForm").on("submit", function () {
                        formSubmitted = true;
                    })


                })
            </script>

            <div class="personal-details-content">
                <div class="inline-details">
                    <button type="submit" class="button--next" id="submitDetails">Next</button>
                </div>
            </div>
        </section>
    }
</div>