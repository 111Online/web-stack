@using NHS111.Models.Models.Web
@inherits NHS111.Web.Views.Shared.SurveyLinkView<PersonalDetailViewModel>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
}

@section Title {
    Check details
}

@section HeadTop {
    @{ var url = string.Format("/outcome/{0}/{1}/{2}/itk/personaldetails/confirmdetails/{3}/{4}", Url.Encode(Model.PathwayNo), Url.Encode(Model.OutcomeGroup.Text), Url.Encode(Model.Id), Url.Encode(Model.SelectedServiceId), Url.Encode(Model.SelectedService.Name)); }
    <script>
        var pageId = '@Model.Id';
        dataLayer = [
            {
                'virtualPageUrl': '@url',
                'virtualPageTitle': "Personal Details - Confirm Details"
            }];
    </script>
}

@{
    var dataDictionary = ViewContext.ViewData;
    dataDictionary.Add(new KeyValuePair<string, object>("LaunchPage", "confirm-details"));
}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageData = new PageDataViewModel(PageDataViewModel.PageType.PersonalDetailsConfirmDetails, Model) })
}

<div class="nhsuk-core measure">
    <h1 class="nhsuk-heading-l">Check details</h1>

    @{
        var isProxy = Model.Informant.IsInformantForPatient;
        var isAtHome = Model.AddressInformation.HomeAddressSameAsCurrentWrapper.HomeAddressSameAsCurrent == HomeAddressSameAsCurrent.Yes;
        var showSex = false;

        if (Model.UserInfo.Demography.Gender != null) {
            showSex = !(NHS111.Models.Models.Domain.Gender.Indeterminate.Equals(new NHS111.Models.Models.Domain.Gender(Model.UserInfo.Demography.Gender)));
        }
    }

    @if (isProxy && !Model.OutcomeGroup.IsCoronaVirus)
    {
        <div class="callout callout--info nhsuk-u-margin-bottom-4" id="confirm-details-third-party">
            <p>We'll call your number. @Model.UserInfo.FirstName might have to answer some questions during the call.</p>
        </div>
    }

    @* This uses the pattern for Check Answers from GDS https://design-system.service.gov.uk/patterns/check-answers/ *@

    @if (!isProxy && isAtHome)
    {
        <dl class="summary-list">
            <div>
                <dt>Name</dt>
                <dd>@Model.UserInfo.FirstName @Model.UserInfo.LastName</dd>
            </div>

            <div>
                <dt>Date of birth</dt>
                <dd>@Model.UserInfo.DoB.GetValueOrDefault().ToString("d MMMM yyyy")</dd>
            </div>

            @if (showSex)
            {
                <div>
                    <dt>Sex</dt>
                    <dd>@Model.UserInfo.Demography.Gender</dd>
                </div>
            }
            <div>
                <dt>Home address</dt>
                <dd>@Html.Raw(string.Join("<br>", Model.AddressInformation.PatientHomeAddress.FormattedAddress.Split(new string[] { ", " }, StringSplitOptions.RemoveEmptyEntries)))</dd>
            </div>

            <div>
                <dt>Number to call</dt>
                <dd>@Model.UserInfo.TelephoneNumber</dd>
            </div>
            @if (Model.EmailAddress.Provided)
            {
                <dt>Email Address</dt>
                <dd>@Model.EmailAddress.EmailAddress</dd>
            }
        </dl>
    }

    @if (!isProxy && !isAtHome)
    {
        <dl class="summary-list">
            <div>
                <dt>Name</dt>
                <dd>@Model.Informant.Forename @Model.Informant.Surname</dd>
            </div>

            <div>
                <dt>Date of birth</dt>
                <dd>@Model.UserInfo.DoB.GetValueOrDefault().ToString("d MMMM yyyy")</dd>
            </div>
            @if (showSex)
            {
                <div>
                    <dt>Sex</dt>
                    <dd>@Model.UserInfo.Demography.Gender</dd>
                </div>
            }
            <div>
                <dt>Home postcode</dt>
                @if (Model.AddressInformation.HomeAddressSameAsCurrentWrapper.HomeAddressSameAsCurrent == HomeAddressSameAsCurrent.DontKnow)
                {
                    <dd>Not known</dd>
                }
                else
                {
                    <dd>@Model.AddressInformation.PatientHomeAddress.FormattedPostcode</dd>
                }
            </div>

            <div>
                <dt>Location address</dt>
                <dd>@Html.Raw(string.Join("<br>", Model.AddressInformation.PatientCurrentAddress.FormattedAddress.Split(new string[] { ", " }, StringSplitOptions.RemoveEmptyEntries)))</dd>
            </div>

            <div>
                <dt>Number to call</dt>
                <dd>@Model.UserInfo.TelephoneNumber</dd>
            </div>
            @if (Model.EmailAddress.Provided)
            {
                <dt>Email Address</dt>
                <dd>@Model.EmailAddress.EmailAddress</dd>
            }
        </dl>
    }

    @if (isProxy && isAtHome)
    {
        <dl class="summary-list">
            <div>
                <dt>Your name</dt>
                <dd>@Model.Informant.Forename @Model.Informant.Surname</dd>
            </div>

            <div>
                <dt>Number to call</dt>
                <dd>@Model.UserInfo.TelephoneNumber</dd>
            </div>
        </dl>

        <dl class="summary-list nhsuk-u-margin-top-5">
            <div>
                <dt>Who needs help</dt>
                <dd>@Model.UserInfo.FirstName @Model.UserInfo.LastName</dd>
            </div>

            <div>
                <dt>Their date of birth</dt>
                <dd>@Model.UserInfo.DoB.GetValueOrDefault().ToString("d MMMM yyyy")</dd>
            </div>
            @if (showSex)
            {
                <div>
                    <dt>Their sex</dt>
                    <dd>@Model.UserInfo.Demography.Gender</dd>
                </div>
            }
            <div>
                <dt>Their home address</dt>
                <dd>@Html.Raw(string.Join("<br>", Model.AddressInformation.PatientHomeAddress.FormattedAddress.Split(new string[] { ", " }, StringSplitOptions.RemoveEmptyEntries)))</dd>
            </div>
            @if (Model.EmailAddress.Provided)
            {
                <dt>Email Address</dt>
                <dd>@Model.EmailAddress.EmailAddress</dd>
            }
        </dl>
    }

    @if (isProxy && !isAtHome)
    {
        <dl class="summary-list">
            <div>
                <dt>Your name</dt>
                <dd>@Model.Informant.Forename @Model.Informant.Surname</dd>
            </div>

            <div>
                <dt>Number to call</dt>
                <dd>@Model.UserInfo.TelephoneNumber</dd>
            </div>
        </dl>


        <dl class="summary-list nhsuk-u-margin-top-5">
            <div>
                <dt>Who needs help</dt>
                <dd>@Model.UserInfo.FirstName @Model.UserInfo.LastName</dd>
            </div>

            <div>
                <dt>Their date of birth</dt>
                <dd>@Model.UserInfo.DoB.GetValueOrDefault().ToString("d MMMM yyyy")</dd>
            </div>

            @if (showSex)
            {
                <div>
                    <dt>Their sex</dt>
                    <dd>@Model.UserInfo.Demography.Gender</dd>
                </div>
            }
            <div>
                <dt>Home postcode</dt>
                @if (Model.AddressInformation.HomeAddressSameAsCurrentWrapper.HomeAddressSameAsCurrent == HomeAddressSameAsCurrent.DontKnow)
                {
                    <dd>Not known</dd>
                }
                else
                {
                    <dd>@Model.AddressInformation.PatientHomeAddress.FormattedPostcode</dd>
                }
            </div>

            <div>
                <dt>Location address</dt>
                <dd>@Html.Raw(string.Join("<br>", Model.AddressInformation.PatientCurrentAddress.FormattedAddress.Split(new string[] { ", " }, StringSplitOptions.RemoveEmptyEntries)))</dd>
            </div>
            @if (Model.EmailAddress.Provided)
            {
                <dt>Email Address</dt>
                <dd>@Model.EmailAddress.EmailAddress</dd>
            }
        </dl>
    }


    @using (Html.BeginForm("PersonalDetails", "PersonalDetails", FormMethod.Post, new { id = "changeDetailsForm" }))
    {
        @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
        @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
        @Html.Partial("_CommonHiddenFieldsPersonalDetails", Model)
        @Html.HiddenFor(m => m.SelectedServiceId)

        <button id="change-details" class="button--link nhsuk-u-margin-top-7">Change these details</button>
    }


    @using (Html.BeginForm("Confirmation", "Outcome", FormMethod.Post, new { id = "submitDetailsForm" }))
    {
        @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
        @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
        @Html.Partial("_CommonHiddenFieldsPersonalDetails", Model)
        @Html.Partial("_CommonHiddenFieldsCurrentAddress", Model)
        @Html.Partial("_CommonHiddenFieldsHomeAddress", Model)
        @Html.Partial("_CommonHiddenFieldsEmailAddress", Model)
        @Html.HiddenFor(m => m.SelectedServiceId)
        <p class="nhsuk-u-margin-top-4 nhsuk-u-margin-bottom-0">By confirming these details you agree to share them with the service.</p>
        <button id="book-call" class="nhsuk-u-margin-top-5">Send details</button>
    }
</div>

@Html.Partial("_PageLoadingIndicator")

<script>
    $(document).on('submit', '#submitDetailsForm', function () {
        startPageLoadingIndicator('Contacting your selected service...')
    })
</script>