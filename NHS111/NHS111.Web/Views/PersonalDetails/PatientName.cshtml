@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.ITK
@inherits NHS111.Web.Views.Shared.SurveyLinkView<NHS111.Models.Models.Web.PersonalDetails.PersonViewModel>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
}

@section Title {
    Enter Personal Details
}

@section HeadTop {
    @{ var url = string.Format("/outcome/{0}/{1}/{2}/itk/personaldetails/{3}/{4}", Url.Encode(Model.PersonalDetailsViewModel.PathwayNo), Url.Encode(Model.PersonalDetailsViewModel.OutcomeGroup.Text), Url.Encode(Model.PersonalDetailsViewModel.Id), Url.Encode(Model.PersonalDetailsViewModel.SelectedServiceId), Model.PersonalDetailsViewModel.OutcomeGroup.IsCoronaVirus ? "Covid-Test-kit": Url.Encode(Model.PersonalDetailsViewModel.SelectedService.Name)); }
    <script>
        var pageId = '@Model.PersonalDetailsViewModel.Id';
        dataLayer = [
        {
            'virtualPageUrl': '@url',
            'virtualPageTitle': 'Personal Details'
        }];
    </script>
}

@{
    var dataDictionary = ViewContext.ViewData;
    dataDictionary.Add(new KeyValuePair<string, object>("LaunchPage", "personal-details"));
}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.PersonalDetailsViewModel.SessionId.ToString(), PageData = new PageDataViewModel(PageDataViewModel.PageType.PersonalDetails, Model.PersonalDetailsViewModel) })
}

<div class="nhsuk-core">


    @using (Html.BeginForm("DateOfBirth", "PersonalDetails", FormMethod.Post, new { id = "yourNameForm" }))
    {
        @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model.PersonalDetailsViewModel, new ViewDataDictionary { TemplateInfo = new System.Web.Mvc.TemplateInfo { HtmlFieldPrefix = "PersonalDetailsViewModel" } })
        @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model.PersonalDetailsViewModel, new ViewDataDictionary { TemplateInfo = new System.Web.Mvc.TemplateInfo { HtmlFieldPrefix = "PersonalDetailsViewModel" } })
        @Html.Partial("_CommonHiddenFieldsPersonalDetails", Model.PersonalDetailsViewModel, new ViewDataDictionary { TemplateInfo = new System.Web.Mvc.TemplateInfo { HtmlFieldPrefix = "PersonalDetailsViewModel" } })

        @Html.HiddenFor(m => m.PersonalDetailsViewModel.SelectedServiceId)
        @Html.HiddenFor(m => m.PersonalDetailsViewModel.UserInfo.TelephoneNumber)
        @Html.HiddenFor(m => m.PersonalDetailsViewModel.UserInfo.DoB)

    <section class="measure">
        <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.Informant") ? "" : "form-group-error")">
            <fieldset>
                <legend class="nhsuk-fieldset__legend nhsuk-fieldset__legend--l nhsuk-u-margin-bottom-4">
                    <h2 class="nhsuk-fieldset__heading">What is your name?</h2>
                </legend>
                @if (Model.PersonalDetailsViewModel.Informant.IsInformantForPatient)
                {
                    <p class="form-info">We'll ask you questions about the person that needs help.</p>
                }
                <div>
                    <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.SelfName.Forename") ? "" : "form-group-error")">
                        <label for="@Html.IdFor(m => m.Forename)">First name</label>
                        @Html.ValidationMessageFor(m => m.Forename, "Enter your first name")
                        @Html.TextBoxFor(m => m.Forename, new { @class = "form-control form-control-15-chars", @maxlength = "255" })
                    </div>
                    <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.SelfName.Surname") ? "" : "form-group-error")">
                        <label for="@Html.IdFor(m => m.Surname)">Last name</label>
                        @Html.ValidationMessageFor(m => m.Surname, "Enter your last name")
                        @Html.TextBoxFor(m => m.Surname, new { @class = "form-control form-control-15-chars", @maxlength = "255" })
                    </div>
                </div>

            </fieldset>
        </div>

        <script type="text/javascript">
            jQuery(function () {
                var formSubmitted = false;

                AddAdapter('firstname');
                AddAdapter('lastname');

                // This uses jQuery Validator's internal check method, this is undocumented functionality.
                // The reason for using it is that the public .valid() method has bad side effects when trying to
                // check validity of a single element.
                function isValid(el) {
                    return $("form").validate().check(el);
                }

                jQuery.validator.addMethod('firstname', function (value) {
                    if (!formSubmitted && value === "") return true;
                    return (value) !== "" && RegExp("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$").test(value);
                });

                jQuery.validator.addMethod('lastname', function (value) {
                    if (!formSubmitted && value === "") return true;
                    return (value) !== "" && RegExp("^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$").test(value);
                });

                jQuery("#yourNameForm").on("submit", function () {
                    formSubmitted = true;
                })


            })
        </script>



        <div class="personal-details-content">
            <div class="inline-details">
                <button type="submit" class="button--next" id="submitDetails">Next</button>
            </div>
        </div>
    </section>
    }
</div>