@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.ITK
@inherits NHS111.Web.Views.Shared.SurveyLinkView<PersonalDetailViewModel>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
}

@section Title {
    Enter Personal Details
}

@section HeadTop {
    @{ var url = string.Format("/outcome/{0}/{1}/{2}/itk/personaldetails/{3}/{4}", Url.Encode(Model.PathwayNo), Url.Encode(Model.OutcomeGroup.Text), Url.Encode(Model.Id), Url.Encode(Model.SelectedServiceId), Url.Encode(Model.SelectedService.Name)); }
    <script>
        var pageId = '@Model.Id';
        dataLayer = [
        {
            'virtualPageUrl': '@url',
            'virtualPageTitle': 'Personal Details'
        }];
    </script>
}

@{
    var dataDictionary = ViewContext.ViewData;
    dataDictionary.Add(new KeyValuePair<string, object>("LaunchPage", "personal-details"));
}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageData = new PageDataViewModel(PageDataViewModel.PageType.PersonalDetails, Model) })
}

<div class="nhsuk-core">
    @using (Html.BeginForm("CurrentAddress", "PersonalDetails", FormMethod.Post, new { id = "personalDetailForm" }))
    {
        @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
        @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
        @Html.HiddenFor(m => m.SelectedServiceId)
        <div class="local-header">
            <h1 class="local-header__title">
                Enter details
            </h1>
        </div>
        <section class="measure">
            <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.Informant") ? "" : "form-group-error")">
                <fieldset>
                    <legend>
                        <h2>Who needs help?</h2>
                    </legend>
                    @Html.ValidationMessageFor(m => m.PatientInformantDetails.Informant, "Tell us who needs help", new { @class = "nhsuk-u-margin-bottom-4" })
                    <div class="panel-group">
                        @Html.RadioButtonFor(m => m.PatientInformantDetails.Informant, NHS111.Models.Models.Web.InformantType.Self, new { id = "PatientInformantDetails_Informant_Self", name = "PatientInformantDetails_Informant", @class = "multiple-choice__input" })
                        <label for="PatientInformantDetails_Informant_Self" class="multiple-choice--radio" name="PatientInformantDetails_Informant" data-target="self-data">Me</label>

                        <div class="toggle-content panel">
                            <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.SelfName.Forename") ? "" : "form-group-error")">
                                <label for="@Html.IdFor(m => m.PatientInformantDetails.SelfName.Forename)">First name</label>
                                @Html.ValidationMessageFor(m => m.PatientInformantDetails.SelfName.Forename, "Enter your first name")
                                @Html.TextBoxFor(m => m.PatientInformantDetails.SelfName.Forename, new { @class = "form-control form-control-15-chars" })
                            </div>
                            <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.SelfName.Surname") ? "" : "form-group-error")">
                                <label for="@Html.IdFor(m => m.PatientInformantDetails.SelfName.Surname)">Last name</label>
                                @Html.ValidationMessageFor(m => m.PatientInformantDetails.SelfName.Surname, "Enter your last name")
                                @Html.TextBoxFor(m => m.PatientInformantDetails.SelfName.Surname, new { @class = "form-control form-control-15-chars" })
                            </div>
                        </div>
                    </div>

                    <div class="panel-group">
                        @Html.RadioButtonFor(m => m.PatientInformantDetails.Informant, NHS111.Models.Models.Web.InformantType.ThirdParty, new { id = "PatientInformantDetails_Informant_ThirdParty", name = "PatientInformantDetails_Informant", @class = "multiple-choice__input" })
                        <label for="PatientInformantDetails_Informant_ThirdParty" class="multiple-choice--radio" name="PatientInformantDetails_Informant" data-target="other-data">Someone else</label>

                        <div class="toggle-content panel">
                            <h3>Enter their details</h3>
                            <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.PatientName.Forename") ? "" : "form-group-error")">
                                <label for="@Html.IdFor(m => m.PatientInformantDetails.PatientName.Forename)">First name</label>
                                @Html.ValidationMessageFor(m => m.PatientInformantDetails.PatientName.Forename, "Enter the first name of the person needing care")
                                @Html.TextBoxFor(m => m.PatientInformantDetails.PatientName.Forename, new { @class = "form-control form-control-15-chars" })
                            </div>
                            <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.PatientName.Surname") ? "" : "form-group-error")">
                                <label for="@Html.IdFor(m => m.PatientInformantDetails.PatientName.Surname)">Last name</label>
                                @Html.ValidationMessageFor(m => m.PatientInformantDetails.PatientName.Surname, "Enter the last name of the person needing care")
                                @Html.TextBoxFor(m => m.PatientInformantDetails.PatientName.Surname, new { @class = "form-control form-control-15-chars" })
                            </div>

                            <hr />

                            <div>
                                <h3 class="heading-small">Tell us your name</h3>
                                <p class="form-info">We'll ask you questions about the person who needs help.</p>
                                <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.InformantName.Forename") ? "" : "form-group-error")">
                                    <label for="@Html.IdFor(m => m.PatientInformantDetails.InformantName.Forename)">First name</label>
                                    @Html.ValidationMessageFor(m => m.PatientInformantDetails.InformantName.Forename, "Enter your first name")
                                    @Html.TextBoxFor(m => m.PatientInformantDetails.InformantName.Forename, new { @class = "form-control form-control-15-chars" })
                                </div>
                                <div class="form-group @(@ViewData.ModelState.IsValidField("PatientInformantDetails.InformantName.Surname") ? "" : "form-group-error")">
                                    <label for="@Html.IdFor(m => m.PatientInformantDetails.InformantName.Surname)">Last name</label>
                                    @Html.ValidationMessageFor(m => m.PatientInformantDetails.InformantName.Surname, "Enter your last name")
                                    @Html.TextBoxFor(m => m.PatientInformantDetails.InformantName.Surname, new { @class = "form-control form-control-15-chars" })
                                </div>
                            </div>
                        </div>
                    </div>

                </fieldset>
            </div>

            <hr />

            @{ var validDate = @ViewData.ModelState.IsValidField("UserInfo.DoB") && @ViewData.ModelState.IsValidField("UserInfo.Day") &&
                                @ViewData.ModelState.IsValidField("UserInfo.Month") && @ViewData.ModelState.IsValidField("UserInfo.Year"); }
            <div class="form-group @(validDate ? "" : "form-group-error") form-group-validation-override">
                <fieldset>
                    <legend>
                        <h2>
                            Date of birth
                        </h2>
                    </legend>
                    <p class="form-info">If you're doing this for someone else enter their date of birth.</p>
                    <div>
                        @Html.ValidationMessageFor(m => m.UserInfo.DoB, "Enter a valid date")
                        <div class="form-group--inline">
                            <label for="@Html.IdFor(m => m.UserInfo.Day)">Day</label>
                            @Html.TextBoxFor(m => m.UserInfo.Day, new { @class = "form-control form-textbox js-validate-number", placeholder = "DD", inputmode = "numeric", pattern = "[0-9]+", maxlength = "2" })
                        </div>
                        <div class="form-group--inline">
                            <label for="@Html.IdFor(m => m.UserInfo.Month)">Month</label>
                            @Html.TextBoxFor(m => m.UserInfo.Month, new { @class = "form-control form-textbox js-validate-number", placeholder = "MM", inputmode = "numeric", pattern = "[0-9]+", maxlength = "2" })
                        </div>
                        <div class="form-group--inline">
                            <label for="@Html.IdFor(m => m.UserInfo.Year)">Year</label>
                            @Html.TextBoxFor(m => m.UserInfo.Year, new { @class = "form-control form-textbox js-validate-number", placeholder = "YYYY", inputmode = "numeric", pattern = "[0-9]+", maxlength = "4" })
                        </div>
                        @Html.HiddenFor(m => m.UserInfo.DoB, new { @class = "validate-hidden"})
                    </div>
                </fieldset>
            </div>

            <hr />
            <div class="form-group  @(@ViewData.ModelState.IsValidField("UserInfo.TelephoneNumber") ? "" : "form-group-error")">
                <fieldset id="tel-number-fields">
                    <legend>
                        <h2>
                            What number should we call?
                        </h2>
                    </legend>
                    <p class="form-info">Tell us your number if you're doing this for someone else.</p>

                    <div>
                        <label for="UserInfo_TelephoneNumber">Enter a mobile, landline or textphone number</label>
                        @Html.ValidationMessageFor(m => m.UserInfo.TelephoneNumber, "Enter a valid phone number")
                        @Html.TextBoxFor(m => m.UserInfo.TelephoneNumber, new { @class = "form-control form-textbox form-control-16-chars", type = "tel", inputmode = "tel" })
                    </div>
                </fieldset>
            </div>
            <hr />
            <script type="text/javascript">
                jQuery(function () {
                    jQuery.validator.addMethod('personname', function (value, element, params) {
                        var personelement = $(element);
                        if ($('input[name="PatientInformantDetails.Informant"]:checked').val() == "Self" &&
                            personelement.attr('name').startsWith("PatientInformantDetails.SelfName")) {
                            return (value) !== "";
                        }
                        if ($('input[name="PatientInformantDetails.Informant"]:checked').val() == "ThirdParty" &&
                            (personelement.attr('name').startsWith("PatientInformantDetails.PatientName")
                                || (personelement.attr('name').startsWith("PatientInformantDetails.InformantName")))) {
                            return (value) !== "";
                        }
                        return false;

                    });

                    jQuery.validator.addMethod('day', function (value, element, params) {

                        var day = $('#UserInfo_Day').val();

                        var result = (parseInt(day) > 0 && parseInt(day) < 32);
                        return result;
                    });

                    jQuery.validator.addMethod('month', function (value, element, params) {

                        var month = $('#UserInfo_Month').val();

                        var result = (parseInt(month) > 0 && parseInt(month) < 13);

                        return result;
                    });

                    jQuery.validator.addMethod('year', function (value, element, params) {

                        var year = $('#UserInfo_Year').val();

                        var currentYear = new Date().getFullYear();
                        var result = (parseInt(year) > 1900 && parseInt(year) < (currentYear + 1));
                        return result;
                    });
                    
                    function isValid(id) {
                        return $("#personalDetailForm").validate().errorList.filter((val) => val.element.id == id).length == 0
                    }

                    jQuery.validator.addMethod('dateofbirth', function (value, element, params) {
                        // Split out from if statement so that each validates before checked, or after first invalid do not get checked
                        var isDayValid = isValid("UserInfo_Day")
                        var isMonthValid = isValid("UserInfo_Month")
                        var isYearValid = isValid("UserInfo_Year")
                        if (!isDayValid || !isMonthValid || !isYearValid) {
                            return false;
                        }

                        var day = $('#UserInfo_Day').val();
                        var month = $('#UserInfo_Month').val();
                        var year = $('#UserInfo_Year').val();

                        var date = new Date(year + '-' + month + '-' + day);
                        var dateIsValid = date.toString() !== 'Invalid Date' && date < new Date();

                        jQuery("#UserInfo_DoB").closest(".form-group").toggleClass("form-group-error", !dateIsValid);

                        // Validation override ensures if one field in a group errors then a specific
                        // error message shows from one field for all the others without showing all in red.
                        // Example: 45/02/2019 should show day as error but the label should be for date.
                        // Validation override "error-all" makes it so that if one field (ie DoB)
                        // errors then all are shown in red.
                        // Example: 29/02/2019 (not leap year) should show all as error and show the same label as above.
                        jQuery("#UserInfo_DoB").closest(".form-group")
                            .toggleClass("form-group-validation-override-error-all", !dateIsValid);

                        return dateIsValid;
                    });

                    jQuery.validator.unobtrusive.adapters.add('personname', ['prefixelement'], function (options) {
                        options.rules['personname'] = options.params;
                        if (options.message != null) {
                            options.messages['personname'] = options.message;
                        }
                    });

                    //attach validators for each field, and whole date
                    jQuery.validator.unobtrusive.adapters.add('day', ['prefixelement'], function (options) {
                        options.rules['day'] = options.params;
                        if (options.message != null) {
                            options.messages['day'] = options.message;
                        }
                    });
                    jQuery.validator.unobtrusive.adapters.add('month', ['prefixelement'], function (options) {
                        options.rules['month'] = options.params;
                        if (options.message != null) {
                            options.messages['month'] = options.message;
                        }
                    });
                    jQuery.validator.unobtrusive.adapters.add('year', ['prefixelement'], function (options) {
                        options.rules['year'] = options.params;
                        if (options.message != null) {
                            options.messages['year'] = options.message;
                        }
                    });
                    jQuery.validator.unobtrusive.adapters.add('dateofbirth', ['prefixelement'], function (options) {
                        options.rules['dateofbirth'] = options.params;
                        if (options.message != null) {
                            options.messages['dateofbirth'] = options.message;
                        }
                    });

                    //validate Dob if we change any of the individual fields
                    jQuery('#UserInfo_Day').on('change, focus, blur', function () {
                        ValidateWholeDateOfBirth();
                    });
                    jQuery('#UserInfo_Month').on('change, focus, blur', function () {
                        ValidateWholeDateOfBirth();
                    });
                    jQuery('#UserInfo_Year').on('change, focus, blur', function () {
                        ValidateWholeDateOfBirth();
                    });

                    function ShowDoBError() {
                        jQuery("#UserInfo_DoB").toggleClass("input-validation-error", true);
                        jQuery("#UserInfo_DoB").parent(".form-group").toggleClass("form-group-error", true);
                        jQuery("[data-valmsg-for='UserInfo.DoB']").toggleClass("field-validation-error", true).removeClass("field-validation-valid");
                    }

                    function ValidateWholeDateOfBirth() {

                        if (jQuery("#UserInfo_Day").val() === ""
                            || jQuery("#UserInfo_Month").val() === ""
                            || jQuery("#UserInfo_Year").val() === "")
                            return false;

                        if (jQuery("#UserInfo_Day").valid()
                            && jQuery("#UserInfo_Month").valid()
                            && jQuery("#UserInfo_Year").valid()) {
                            jQuery("#personalDetailForm").validate().element("#UserInfo_DoB");
                        } else {
                            jQuery("#UserInfo_DoB").closest(".form-group").removeClass("form-group-validation-override-error-all");
                            ShowDoBError()
                        }
                    }
                    
                })
            </script>

            <div class="personal-details-content">
                <div class="inline-details">
                    <button type="submit" class="button--next" id="submitDetails">Next</button>
                </div>
            </div>
        </section>
    }
</div>