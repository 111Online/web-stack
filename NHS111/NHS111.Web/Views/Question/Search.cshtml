@using NHS111.Models.Models.Domain
@using NHS111.Models.Models.Web
@{
    Layout = "~/Views/Shared/_LayoutNhsUK.cshtml";
}
@inherits NHS111.Web.Views.Shared.DisclaimerPopupView

@section Title {NHS 111 Digital}

@section Scripts {
    <script src="~/scripts/jquery1.11.2-ui.min.js"></script>
    <script src="~/scripts/jquery.blockUI.js"></script>
    <script src="~/scripts/custom.js"></script>
    <script src="~/scripts/disclaimer.js"></script>
}

@{
    if (DisclaimerPopupFeature.IsEnabled) {
        <!-- toggle disclaimer popup -->
        <link rel="stylesheet" href="~/Content/css_NhsUK/modal.css">
        <script src="~/scripts/disclaimer-popup.js"></script>
    }
}

<link href="~/Content/css_NhsUK/search.css" media="screen" rel="stylesheet" type="text/css" />

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { PageId = Request.Url.GetComponents(UriComponents.PathAndQuery, UriFormat.SafeUnescaped) })
}

<div id="search">

    <div id="wrapper">

        <div class="content-container search-box">
            <form>
                <h2>Search by symptom</h2>
                <div class="symptoms-find-container">
                    <label for="searchTags">
                        <input type="text" class="input-symptoms ui-autocomplete-input" id="searchTags" autocomplete="off" name="searchTags"/>
                    </label>
                    <input type="submit" class="button button-get-started" value="Search" id="searchButton"/>
                </div>
            </form>

            <form action="/JustToBeSafe/JustToBeSafeFirst" method="post" novalidate="novalidate">
                <input type="hidden" id="pathwayNo" name="pathwayNo" value="" />
                <input type="hidden" id="pathwayTitle" name="pathwayTitle" value="" />
                <input id="UserInfo_Demography_Gender" name="UserInfo.Demography.Gender" type="hidden" value="@Model.UserInfo.Demography.Gender" />
                <input id="UserInfo_Demography_Age" name="UserInfo.Demography.Age" type="hidden" value="@Model.UserInfo.Demography.Age" />
                <div id="SearchResults">
                    <hr />
                    <h3></h3>

                    <ul></ul>
                </div>

                <div id="categories" class="all-symptoms">
                    @{
                        var bodyParts = new List<string> { "Head and neck", "Shoulder, arm and hand", "Chest and back", "Abdomen, groin and side of the body", "Bowel and urinary problems", "Genitals", "Leg and foot", "Skin and hair" };
                        var lists = new List<IEnumerable<CategoryWithPathways>>(2);
                        lists.Add(Model.AllTopics.Where(t => bodyParts.Contains(t.Category.Title)).OrderBy(x => x.Category.OrderNo));
                        lists.Add(Model.AllTopics.Where(t => !bodyParts.Contains(t.Category.Title)).OrderBy(x => x.Category.OrderNo));
                        //var orderLists = Model.AllTopics.OrderBy(c => c.Category.Title);
                        //lists.Add(orderLists.Take((orderLists.Count() / 2)));
                        //lists.Add(orderLists.Skip(lists[0].Count()));
                    }

                    <h2>Find a topic</h2>

                    @for (int i = 0; i < lists.Count; ++i) {
                        <div class="@Html.Raw(i == 0 ? "left" : "right")">
                            <h4>@Html.Raw(i == 0 ? "Body" : "General")</h4>
                            <ul>
                                @foreach (var topLevelCategory in lists[i]) {
                                    <li>
                                        <h5><a class="category linkButton bullet" href="javascript:void(0);">&bull; <span class="underline" id="@topLevelCategory.Category.Id">@topLevelCategory.Category.Title</span></a></h5>
                                        @if (topLevelCategory.SubCategories != null && topLevelCategory.SubCategories.Any()) {
                                            <ul class="content">
                                                @foreach (var subCategory in topLevelCategory.SubCategories.OrderBy(x => x.Category.Title)) {
                                                    if (!subCategory.Pathways.Any()) {
                                                        continue;
                                                    }
                                                    <li>
                                                        <h5><a class="category linkButton bullet" href="javascript:void(0);">&bull; <span class="underline" id="@subCategory.Category.Id">@subCategory.Category.Title</span></a></h5>
                                                        <ul class="content">
                                                            @foreach (var pathway in subCategory.Pathways.OrderBy(p => p.PathwayData.DigitalTitle)) {
                                                                <li><input type="submit" class="linkButton topicLink" value="@pathway.PathwayData.DigitalTitle" id="@pathway.Pathway.PathwayNo" digital-id="@pathway.PathwayData.DigitalTitleId"/></li>
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        @if (topLevelCategory.Pathways != null && topLevelCategory.Pathways.Any()) {
                                            <ul class="content">
                                                @foreach (var pathway in topLevelCategory.Pathways.OrderBy(p => p.PathwayData.DigitalTitle)) {
                                                    <li><input type="submit" class="linkButton topicLink" value="@pathway.PathwayData.DigitalTitle" id="@pathway.Pathway.PathwayNo" digital-id="@pathway.PathwayData.DigitalTitleId"/></li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            </form>

        </div>

    </div>



    <script>
        function GetDescription(description) {
            var result = "";
            if (description != null) {
                result = description + ".";
                result = result.replace(/\\n\\n/g, ". ");
                result = result.replace(" . ", ". ");
                result = result.replace("..", ".");
            }

            return result;
        }

        function UpdateSearchResults(searchResults) {
            if (searchResults.length < 1) {
                $("#SearchResults ul").empty();
                $("#SearchResults h3").text("No topics found matching '" + $("#searchTags").val() + "' please try again.");
                $("#SearchResults").show();
                $("#categories").show();

                return;
            }

            var MAX_RESULTS = 10;
            var resultCount = searchResults.length < MAX_RESULTS ? searchResults.length : MAX_RESULTS;
            $("#SearchResults").hide();
            $("#SearchResults ul").empty();
            $("#SearchResults h3").text(searchResults.length + " topics found matching '" + $("#searchTags").val() + "'");
            for (var i = 0; i < resultCount; i++) {
                var topic = searchResults[i];
                var desc = GetDescription(topic.Description);
                var additionalTopics = topic.Title.slice(1);
                var additionalTopicsText = additionalTopics.length > 0 ? ("<p class='additional-topics'>Also covers: " + additionalTopics.join(', ') + "</p>") : "";
                var li = $("<li><button type='submit' class='linkButton topicLink' id='" + topic.PathwayNo + "' data-title='" + topic.PathwayTitle + "'>" + topic.Title[0] + "</button>" + additionalTopicsText + "<p>" + desc + "</p></li>");
                $("#SearchResults ul").append(li);
            }
            $("#SearchResults").show();

        }

        $(function () {
            $("#SearchResults").hide();
            $("#categories").hide();

            $("#searchTags").focus();

            $("#searchButton").click(
                function() {
                    $("#categories").hide();
                    var term = $("#searchTags").val().trim();
                    term = encodeURIComponent(term);
                    if (term == '')
                        return false;
                    $.ajax({
                        url: '@Url.Action("PathwaySearch", "Question")',
                        type: "post",
                        dataType: "json",
                        data: { searchTerm: term, gender: '@Model.UserInfo.Demography.Gender', age: @Model.UserInfo.Demography.Age},
                        success: function(data) {
                            data = JSON.parse(data);
                            UpdateSearchResults(data);
                        },
                        error: function(textStatus, errorThrown) {
                            return null;
                        }
                    });

                    return false;
                });

            $(document).on("click", ".topicLink", function(){
                var $this = $(this);
                $('#pathwayNo').val($this.attr("id"));
                $('#pathwayTitle').val($this.data("title"));
            });

            $('.category').click(function () {
                var $this = $(this);

                var $helpTextLinkMessage = $this.parent().next('.content');
                $helpTextLinkMessage.slideToggle("fast");
            });

        });
    </script>
</div>
