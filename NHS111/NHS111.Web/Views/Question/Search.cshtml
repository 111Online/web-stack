@using NHS111.Models.Models.Domain
@using NHS111.Models.Models.Web
@model SearchJourneyViewModel
@{
    Layout = "~/Views/Shared/_LayoutNhsUK.cshtml";
    var searchResultHeading = string.Format("No topics found matching '{0}' please try again.", Model.SanitisedSearchTerm);
    if (Model.Results.Any())
    {
        searchResultHeading = string.Format("{0} topics found matching '{1}'", Model.Results.Count(), Model.SanitisedSearchTerm);
    }
    var ageCategory = new AgeCategory(Model.UserInfo.Demography.Age).Value;
}

@section Title  {NHS 111 Digital}

@section Scripts {
    <script src="~/scripts/jquery1.11.2-ui.min.js"></script>
    <script src="~/scripts/jquery.blockUI.js"></script>
    <script src="~/scripts/custom.js"></script>
    <script src="~/scripts/disclaimer.js"></script>
}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { PageId = Request.Url.GetComponents(UriComponents.PathAndQuery, UriFormat.SafeUnescaped) })
}

<link href="~/Content/css_NhsUK/search.css" media="screen" rel="stylesheet" type="text/css"/>

<div id="search">

    <div id="wrapper">

        <div class="content-container search-box">
            <form action="/question/search/" method="GET">
                <input type="hidden" name="age" value="@Model.UserInfo.Demography.Age"/>
                <input type="hidden" name="gender" value="@Model.UserInfo.Demography.Gender"/>
                <h2>Search by symptom</h2>
                <div class="symptoms-find-container">
                    <label for="searchTags">
                        <input type="text" class="input-symptoms ui-autocomplete-input" id="searchTags" name="q" autocomplete="off" value="@Model.SanitisedSearchTerm"/>
                    </label>
                    <input type="submit" class="button button-get-started" value="Search" id="searchButton"/>
                </div>
            </form>

            <div id="SearchResults">
                @if (Model.HasSearched) {
                    <hr/>
                    <h3 id="search-results-heading">@searchResultHeading</h3>
                }
                @if (Model.Results.Any()) {
                    <div class="results-list">
                        <ul>
                            @foreach (var result in Model.Results) {
                                var additionalTopics = result.Title.Skip(1);
                                <li>
                                    <a class="linkButton" data-title="@result.PathwayTitle" data-pathway-number="@result.PathwayNo" href="/@result.PathwayNo@result.Gender.First()@result.AgeGroup.First()/start?age=@Model.UserInfo.Demography.Age">@Html.Raw(result.Title.First())</a>
                                    @if (additionalTopics.Any()) {
                                        <p class='additional-topics'>Also covers: @Html.Raw(string.Join(", ", additionalTopics))</p>
                                    }
                                    <p>@Html.Raw(result.Description)</p>
                                </li>

                            }
                        </ul>
                        <h4 id="category-option">
                            If you can't find a topic you can try <a href="#" id="show-categories" class="linkButton">searching by category</a>.
                        </h4>
                    </div>
                }
            </div>

            @if (Model.HasSearched) {
                <div id="categories" class="all-symptoms">
                    @{
                        var bodyParts = new List<string> {"Head and neck", "Shoulder, arm and hand", "Chest and back", "Abdomen, groin and side of the body", "Bowel and urinary problems", "Genitals", "Leg and foot", "Skin and hair"};
                        var lists = new List<IEnumerable<CategoryWithPathways>>(2);
                        lists.Add(Model.AllTopics.Where(t => bodyParts.Contains(t.Category.Title)).OrderBy(x => x.Category.OrderNo));
                        lists.Add(Model.AllTopics.Where(t => !bodyParts.Contains(t.Category.Title)).OrderBy(x => x.Category.OrderNo));
                        //var orderLists = Model.AllTopics.OrderBy(c => c.Category.Title);
                        //lists.Add(orderLists.Take((orderLists.Count() / 2)));
                        //lists.Add(orderLists.Skip(lists[0].Count()));
                    }

                    <h2>Find a topic</h2>

                    @for (int i = 0; i < lists.Count; ++i) {
                        <div class="@Html.Raw(i == 0 ? "left" : "right")">
                            <h4>@Html.Raw(i == 0 ? "Body" : "General")</h4>
                            <ul>
                                @foreach (var topLevelCategory in lists[i]) {
                                    <li>
                                        <h5><a class="category linkButton bullet" href="javascript:void(0);">&bull; <span class="underline" id="@topLevelCategory.Category.Id">@topLevelCategory.Category.Title</span></a></h5>
                                        @if (topLevelCategory.SubCategories != null && topLevelCategory.SubCategories.Any()) {
                                            <ul class="content">
                                                @foreach (var subCategory in topLevelCategory.SubCategories.OrderBy(x => x.Category.Title)) {
                                                    if (!subCategory.Pathways.Any()) {
                                                        continue;
                                                    }
                                                    <li>
                                                        <h5><a class="category linkButton bullet" href="javascript:void(0);">&bull; <span class="underline" id="@subCategory.Category.Id">@subCategory.Category.Title</span></a></h5>
                                                        <ul class="content">
                                                            @foreach (var pathway in subCategory.Pathways.OrderBy(p => p.PathwayData.DigitalTitle)) {
                                                                <li>
                                                                    <a class="linkButton" data-title="@pathway.PathwayData.DigitalTitle" data-pathway-number="@pathway.Pathway.Id" href="/@pathway.Pathway.PathwayNo@Model.UserInfo.Demography.Gender@ageCategory/start?age=@Model.UserInfo.Demography.Age">@Html.Raw(pathway.PathwayData.DigitalTitle)</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        @if (topLevelCategory.Pathways != null && topLevelCategory.Pathways.Any()) {
                                            <ul class="content">
                                                @foreach (var pathway in topLevelCategory.Pathways.OrderBy(p => p.PathwayData.DigitalTitle)) {
                                                    <li>
                                                        <a class="linkButton" data-title="@pathway.PathwayData.DigitalTitle" data-pathway-number="@pathway.Pathway.Id" href="/@pathway.Pathway.PathwayNo@Model.UserInfo.Demography.Gender@ageCategory/start?age=@Model.UserInfo.Demography.Age">@Html.Raw(pathway.PathwayData.DigitalTitle)</a>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            }
        </div>

    </div>



    <script>
        $(document).ready(function() {
        @if (Model.Results.Any()) {
            @Html.Raw("$('#categories').hide();");
        }
        });

        $(document).on("click", "#show-categories", function() {
            $("#categories").show();
            $(".results-list").hide();
            $("#category-option").hide();
            $("#search-results-heading").hide();
        });

        $('.category').click(function() {
            var $this = $(this);

            var $helpTextLinkMessage = $this.parent().next('.content');
            $helpTextLinkMessage.slideToggle("fast");
        });
    </script>
</div>