@using NHS111.Models.Models.Domain
@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.Elements

@inherits NHS111.Web.Views.Shared.AgeValidationView<NHS111.Models.Models.Web.JourneyViewModel>
@{
    Layout = "~/Views/Shared/_LayoutNhsUK.cshtml";
}
@section Title { NHS 111 Online - Tell us about you }

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageData = new PageDataViewModel(PageDataViewModel.PageType.Demographics, Model.Campaign, Model.Source, Model.StartParameter) })
}

@using (Html.BeginForm("Search", "Search", FormMethod.Post, new { @id = "outerContent", @class = "measure" }))
{
    @Html.HiddenFor(x => Model.SessionId)
    @Html.HiddenFor(x => Model.FilterServices)
    @Html.HiddenFor(x => Model.CurrentPostcode)
    @Html.HiddenFor(x => Model.Campaign)
    @Html.HiddenFor(x => Model.Source)
    @Html.HiddenFor(x => Model.StartParameter)
    @Html.HiddenFor(x => Model.PathwayNo)
    @Html.HiddenFor(m => m.IsCovidJourney)

    <div class="callout callout--error @(Html.ViewData.ModelState.IsValid ? "validation-summary-valid" : "validation-summary-errors")"
         data-valmsg-summary="true">
        <h2>
            There's a problem with the following
        </h2>
        <div class="panel-body">
            <ul class="js-error-list-original"></ul>
            <ul class="js-error-list"></ul>
        </div>
    </div>

    <h1 class="heading-large gender-heading">Tell us about you, or the person you're asking about</h1>

    <div class="callout callout--info">
        <p>Call 111 if you're asking about someone under 5</p>
    </div>

    <div class="form-group @(@ViewData.ModelState.IsValidField("UserInfo.Demography.Gender") ? "" : "form-group-error")">
        <fieldset id="container_@Html.IdFor(m => m.UserInfo.Demography.Gender)">
            <legend class="form-label">
                Sex
            </legend>
            @Html.ValidationMessageFor(m => m.UserInfo.Demography.Gender, null, new { @class = "error-message" })
            <div class="multiple-choice">
                @Html.RadioButtonFor(m => m.UserInfo.Demography.Gender, GenderEnum.Female, new { @id = "Female", required = "required" })
                @Html.LabelFor(m => m.UserInfo.Demography.Gender, "Female", new { @for = "Female", @class = "multiple-choice--radio" })
            </div>
            <div class="multiple-choice">
                @Html.RadioButtonFor(m => m.UserInfo.Demography.Gender, GenderEnum.Male, new { @id = "Male", required = "required" })
                @Html.LabelFor(m => m.UserInfo.Demography.Gender, "Male", new { @for = "Male", @class = "multiple-choice--radio" })
            </div>
        </fieldset>

        @Html.Partial("_LinkSummary", new LinkSummaryViewModel
        {
            Link = "Why aren’t there more options?",
            Summary = @"<div class=""panel panel-border-narrow"">
                <p>
                    Some clinical assessments can be different depending on your sex.
                    Not everyone sees themselves as female or male, so if neither option is right for you call 111.<br /><br />
                    We want to improve the service in the future so it works for everyone.
                </p>
            </div>",
            ID = "group-trans-gender",
            EventTrigger = "click",
            EventValue = "Transgender information"
        })
    </div>

    <div class="form-group @(@ViewData.ModelState.IsValidField("UserInfo.Demography.Age") ? "" : "form-group-error")">
        <fieldset class="age-content" id="container_@Html.IdFor(m => m.UserInfo.Demography.Age)">
            @Html.LabelFor(m => m.UserInfo.Demography.Age, "Age in years", new { @class = "form-label" })
            @Html.ValidationMessageFor(m => m.UserInfo.Demography.Age, null, new { @class = "error-message" })
            @Html.TextBoxFor(m => m.UserInfo.Demography.Age, new { @class = "form-textbox form-textbox--small js-validate-number", inputmode = "numeric", maxLength = 3, autocomplete = "off", required = "required" })
        </fieldset>
    </div>

    <button class="button button--next" id="submitGender" type="submit" name="Slider">Next</button>
}

@if (FilterPathwaysByAgeFeature.IsEnabled)
{
    <script type="text/javascript">
        jQuery(function () {
            jQuery.validator.addMethod('ageminimum',
                function (value, element, params) {
                    return parseInt(value) >= 5;
                });

            jQuery.validator.unobtrusive.adapters.add('ageminimum',
                ['prefixelement'],
                function (options) {
                    options.rules['ageminimum'] = options.params;
                    if (options.message != null) {
                        options.messages['ageminimum'] = options.message;
                    }
                });

            jQuery.validator.addMethod('agemaximum',
                function (value, element, params) {
                    return parseInt(value) <= 119;
                });

            jQuery.validator.unobtrusive.adapters.add('agemaximum',
                ['prefixelement'],
                function (options) {
                    options.rules['agemaximum'] = options.params;
                    if (options.message != null) {
                        options.messages['agemaximum'] = options.message;
                    }
                });
        });
    </script>
}
