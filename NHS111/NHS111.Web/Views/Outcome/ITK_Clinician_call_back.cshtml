@using NHS111.Models.Models.Web
@inherits NHS111.Web.Views.Shared.SurveyLinkView<OutcomeViewModel>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
    var noITKServicesAreAvailable = Model.DosCheckCapacitySummaryResult.ResultListEmpty || Model.DosCheckCapacitySummaryResult.Success.Services.All(s => !s.OnlineDOSServiceType.IsReferral);
}

@section Title { NHS 111 - Speak to a clinician }

@section HeadTop {
    @{
        var url = string.Format("/outcome/{0}/{1}/{2}/disposition/", Url.Encode(Model.PathwayNo), Url.Encode(Model.OutcomeGroup.Text), Url.Encode(Model.Id));
        var title = Model.TitleWithoutBullets;
        if (title == null) { title = "ITK Clinician callback - no results"; }
    }
    <script>
        var pageId = '@Model.Id';
        dataLayer = [
        {
            'virtualPageUrl': '@url',
            'virtualPageTitle': '@title'
        }];
    </script>
}

@{
    var surveyDataDictionary = ViewContext.ViewData;
    surveyDataDictionary.Add(new KeyValuePair<string, object>("ServiceOptions", ""));
    surveyDataDictionary.Add(new KeyValuePair<string, object>("ServiceCount", 0));
}

@section SurveyBanner{
    @Html.Partial("_SurveyLink", Model.SurveyLink, surveyDataDictionary)
}
@section FeedbackSection {
    @if (!SurveyLinkFeature.IsEnabled)
    {
        @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageData = new PageDataViewModel(PageDataViewModel.PageType.Outcome, Model) })
    }
    else
    {
        @Html.Partial("_SurveyLink", Model.SurveyLink, surveyDataDictionary)
    }
}

@if (noITKServicesAreAvailable && Model.CurrentPostcode != null)
{
    <div class="itk-message measure nhsuk-core">
        <h1 class="nhsuk-heading-xl">Call 111 now</h1>
        @Html.Partial("_CovidEliminator", Model)
        @if (Model.NeedsGeneralCovidAdvice)
        {
            @Html.Partial("_GeneralCovidAdvice")
        }
        <p>We are unable to book a call for you at the moment.</p>
        <p>You need to call 111 to get more help. Tell them you completed an assessment online.</p>
        <p>When you call 111 the health adviser will:</p>
        <ul>
            <li>
                ask you to repeat your answers
            </li>
            <li>
                transfer you to a nurse if necessary
            </li>
            <li>
                book an appointment for you if you need one
            </li>
        </ul>

        <div class="callout callout--info">
            <p>Your answers mean you do need to speak to someone, so it is important that you call 111.</p>
        </div>
    </div>
}
else
{
    <div class="measure nhsuk-core">
        <h1 class="nhsuk-heading-xl">Book a call with a 111 nurse now</h1>
        @Html.Partial("_CovidEliminator", Model)
        @if (Model.NeedsGeneralCovidAdvice)
        {
            @Html.Partial("_GeneralCovidAdvice")
        }
        <p>A nurse needs to speak to you so we can get you the right help.</p>
        <p>When you book a call the nurse will:</p>
        <ul>
            <li>
                know what you’ve answered so far
            </li>
            <li>
                advise you what to do next
            </li>
            <li>
                book an appointment for you if you need one
            </li>
        </ul>
        <p>If you don't book a call and just ring 111 you will have to start again from the beginning.</p>

        @{ var importantWaitText = Model.TimeFrameMinutes < 60 ? " It’s important that you wait to speak to the nurse." : "";}

        <div class="callout callout--info nhsuk-u-margin-bottom-4">
            <p>You should get a call within @Html.Raw(Model.WaitTimeText).@importantWaitText</p>
        </div>

        @using (Html.BeginForm("PersonalDetails", "PersonalDetails", FormMethod.Post))
        {
            @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
            @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
            @Html.Hidden("SelectedServiceId", Model.DosCheckCapacitySummaryResult.Success.Services.First(s => s.OnlineDOSServiceType.IsReferral).Id)

            <button type="submit" name="PersonalDetails" value="Book a call">Book a nurse call</button>
        }
        <details class="measure nhsuk-u-margin-top-6 nhsuk-u-margin-bottom-4">
            <summary>
                <span class="details__arrow"></span>
                <span class="summary">I am unable to book a call right now</span>
            </summary>
            <div>
                <p>
                    If you can’t book a call you can use the online service again later or
                    call 111. You will have to provide all your answers again.
                </p>
            </div>
        </details>
    </div>

}