@using Microsoft.Ajax.Utilities
@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.FromExternalServices
@inherits NHS111.Web.Views.Shared.SurveyLinkView<OutcomeViewModel>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
    var error = Model.DosCheckCapacitySummaryResult.ResultListEmpty;
    var noITKServicesAreAvailable = Model.DosCheckCapacitySummaryResult.Success.Services.All(s => s.OnlineDOSServiceType != OnlineDOSServiceType.Callback);
}

@section Title { NHS 111 - Speak to a clinician }

@section HeadTop {
    @{
        var url = string.Format("/outcome/{0}/{1}/{2}/disposition/", Url.Encode(Model.PathwayNo), Url.Encode(Model.OutcomeGroup.Text), Url.Encode(Model.Id));
        var title = Model.TitleWithoutBullets;
        if (title == null) { title = "ITK Clinician callback - no results"; }
    }
    <script>
        var pageId = '@Model.Id';
        dataLayer = [
        {
            'virtualPageUrl': '@url',
            'virtualPageTitle': '@title'
        }];
    </script>
}
@section SurveyBanner{
    @Html.Partial("_SurveyLink", Model.SurveyLink)
}
@section FeedbackSection {
    @if (!SurveyLinkFeature.IsEnabled)
    {
        @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageData = new PageDataViewModel(PageDataViewModel.PageType.Outcome, Model) })
    }
    else
    {
        @Html.Partial("_SurveyLink", Model.SurveyLink)
    }
}


@if (noITKServicesAreAvailable)
{
    <section class="local-header">
        <div class="measure">
            <h1 class="local-header__title">You need to call 111 to speak to an adviser now</h1>
        </div>
    </section>

    <div class="itk-message measure">
        <p>We’ve gone as far as we can online and to get you the right help we need to speak to you.</p>
        <p>At the moment we're unable to connect you automatically in your area.</p>
        <p>When you call 111 the health adviser will:</p>
        <ul>
            <li>
                ask you to repeat your answers
            </li>
            <li>
                transfer you to a nurse if necessary
            </li>
            <li>
                book an appointment for you if you need one
            </li>
            <li>
                advise you what to do next
            </li>
        </ul>

        <div class="callout callout--info">
            <p>Your answers mean it’s important that you speak to a health adviser. Call 111 now.</p>
        </div>
    </div>
}
else
{
    <section class="local-header">
        <div class="measure">
            <h1 class="local-header__title">Book a call with a 111 nurse now</h1>
        </div>
    </section>

    <div class="itk-message measure">
        <p>We’ve gone as far as we can online, and we need to speak to you to finish your health assessment.</p>
        <br />
        <p>The 111 nurse will:</p>
        <ul>
            <li>
                know what you’ve answered so far
            </li>
            <li>
                ask you some more questions
            </li>
            <li>
                book an appointment for you if you need one
            </li>
            <li>
                advise you what to do next
            </li>
        </ul>

        @if (Model.CurrentPostcode == null)
        {
            var dataDictionary = ViewContext.ViewData;
            dataDictionary.Add(new KeyValuePair<string, object>("Title", ""));
            dataDictionary.Add(new KeyValuePair<string, object>("ButtonText", "Next"));
            dataDictionary.Add(new KeyValuePair<string, object>("Label", ""));
            dataDictionary.Add(new KeyValuePair<string, object>("ITK", true));
            dataDictionary.TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "FindService" };

            @Html.Partial("_FindService", Model, dataDictionary)
        }
        else
        {
            using (Html.BeginForm("PersonalDetails", "Outcome", FormMethod.Post))
            {
                    @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
                    @Html.Partial("_CommonHiddenFieldsCareAdviceViewModel", Model)
                @Html.Hidden("SelectedServiceId", Model.DosCheckCapacitySummaryResult.Success.Services.First(s => s.OnlineDOSServiceType == OnlineDOSServiceType.Callback).Id)

                <hr />
                    <button type="submit" name="PersonalDetails" value="Book a call">Book a nurse call</button>
            }
        }

        <div class="callout callout--info">
            <p>You should get a call within @Html.Raw(Model.WaitTimeText). It’s important that you wait to speak to the nurse.</p>
        </div>
    </div>
}

@if (Model.CareAdvices != null && Model.CareAdvices.Any())
{
    <details class="measure">
        <summary>
            <span class="details__arrow"></span>
            <span class="summary">I don't want to book a call right now</span>
        </summary>
        <div class="panel panel-border-narrow">
            @Html.Partial("_CareAdvice", Model.CareAdvices, new ViewDataDictionary { { "Title", "" }, { "NoHR", "true" } })
        </div>
    </details>
}
else
{
    @Html.Partial("_WorseningAdvice", Model)
}