@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.FromExternalServices
@model OutcomeViewModel
<script src="http://maps.google.com/maps/api/js?key=AIzaSyCv3YwvmRoueyoLcW2iiSPjVeHecU18hmA "
        type="text/javascript"></script>
<script src="/Scripts/geotools.js"
        type="text/javascript"></script>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
}

@section Title {
    Service details
}

@section OuterSection {

}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { PageId = Model.Id })
}

<link href="~/content/css_NhsUk/servicelist.css" media="screen" rel="stylesheet" type="text/css"/>
<link href="~/content/css_NhsUk/service.css" media="screen" rel="stylesheet" type="text/css" />
<div class="results-list">
    <section>
        <div class="section-item">
            <h3 class="section-header">
                Recommended service
            </h3>
            @{
                DosService selectedService = null;
                if (Model.DosCheckCapacitySummaryResult.Success != null)
                {
                    selectedService = Model.DosCheckCapacitySummaryResult.Success.Services.FirstOrDefault();
                }
            }
            @if (selectedService != null)
            {
                <div class="service-list-content">
                    @Html.Partial("_SelectedService", selectedService)
                    <div class="form-item-wrapper">
                        <fieldset>
                            <div class="form-group">
                                @using (Html.BeginForm("PersonalDetails", "Outcome", FormMethod.Post))
                                {
                                    @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
                                    @Html.Hidden("SelectedServiceId", @selectedService.Id)

                                }
                            </div>
                        </fieldset>
                    </div>
                </div>
            }
        </div>
    </section>

    <section>
        <div class="section-item last">
            <h3 class="section-header">
                Other services near you
            </h3>
            @if (Model.DosCheckCapacitySummaryResult.Success != null)
            {
                foreach (var service in Model.DosCheckCapacitySummaryResult.Success.Services.Skip(1))
                {
                    <div class="service-list-content">
                        @Html.Partial("_SelectedService", service)
                        <fieldset>
                            <div class="form-group">
                                @using (Html.BeginForm("PersonalDetails", "Outcome", FormMethod.Post))
                                {
                                    @Html.Partial("_CommonHiddenFieldsOutcomeViewModel", Model)
                                    @Html.Hidden("SelectedServiceId", service.Id)

                                }
                            </div>
                        </fieldset>

                    </div>
                }
            }
        </div>
    </section>

    <script type="text/javascript">

        var locations = [
            @{ int i = 0; }
            @foreach (var service in Model.DosCheckCapacitySummaryResult.Success.Services)
         {
                

           @Html.Raw("['" + service.Name + "',OsGridRef.osGridToLatLon(new OsGridRef(" + service.Eastings + ", " + service.Northings + "), LatLon.datum.OSGB36).lat, OsGridRef.osGridToLatLon(new OsGridRef(" + service.Eastings + ", " + service.Northings + "), LatLon.datum.OSGB36).lon, "+ i+"],")
             i++;
        }

        ];
    </script>

</div>
<div class="service-map" ></div>

<script type="text/javascript">
   
    var map = new google.maps.Map($('.service-map')[0], {
        zoom: 10,
        center: new google.maps.LatLng(locations[0][1], locations[0][2]),
        mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var infowindow = new google.maps.InfoWindow();

    var marker, i;

    for (i = 0; i < locations.length; i++) {
        marker = new google.maps.Marker({
            position: new google.maps.LatLng(locations[i][1], locations[i][2]),
            map: map
        });

        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infowindow.setContent(locations[i][0]);
                infowindow.open(map, marker);
            }
        })(marker, i));
    }


</script>
