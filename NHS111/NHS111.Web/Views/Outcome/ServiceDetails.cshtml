@using NHS111.Models.Models.Web
@inherits NHS111.Web.Views.Shared.SurveyLinkView<OutcomeViewModel>
<script src="https://maps.google.com/maps/api/js?key=AIzaSyCv3YwvmRoueyoLcW2iiSPjVeHecU18hmA "
        type="text/javascript"></script>

<script src="/Scripts/geotools.js"
        type="text/javascript"></script>
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
}

@section Title {
    Service details
}
@section HeadTop {
    @{ var url = string.Format("/outcome/{0}/{1}/{2}/servicelist/{3}/", Url.Encode(Model.PathwayNo), Url.Encode(Model.OutcomeGroup.Text), Url.Encode(Model.Id), Url.Encode(Model.UserInfo.CurrentAddress.Postcode)); }
    <script>
        var pageId = '@Model.Id';
        dataLayer = [
        {
            'virtualPageUrl': '@url',
            'virtualPageTitle': '@Model.TitleWithoutBullets'
        }];
    </script>
}

@{
    var dataDictionary = ViewContext.ViewData;
    dataDictionary.Add(new KeyValuePair<string, object>("LaunchPage", "service-details"));
}
@section SurveyBanner{
    @Html.Partial("_SurveyLink", Model.SurveyLink, dataDictionary)
}
@section FeedbackSection {
    @if (!SurveyLinkFeature.IsEnabled)
    {
        @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageId = Model.Id });
    }
    else
    {
        @Html.Partial("_SurveyLink", Model.SurveyLink)
    }
}

@Html.Partial("_OutcomeHeader", Model)


<section>
    @if (!string.IsNullOrEmpty(Model.UserInfo.CurrentAddress.Postcode))
    {
        @Html.Partial("_AlternativeServices", Model, new ViewDataDictionary { { "Title", Html.Raw(Model.OutcomeGroup.Label) + " for " + Model.UserInfo.CurrentAddress.Postcode } });
    }
</section>
<!--
<section>
    <div class="results-map">
        <div class="results-list">
            @using (Html.BeginForm("GetDirections", "Outcome", FormMethod.Post))
            {

                <div class="results-service-recommended section-item">
                    <h3 class="heading-small">
                        Recommended service based on your answers
                    </h3>
                    @{
                        ServiceViewModel selectedService = null;
                        if (Model.DosCheckCapacitySummaryResult.Success != null)
                        {
                            selectedService = Model.DosCheckCapacitySummaryResult.Success.Services.FirstOrDefault();
                        }
                    }
                    @if (selectedService != null)
                    {
                        <div class="service-list-content">
                            <div class="form-item-wrapper">
                                <fieldset>
                                    <legend>
                                        <img src="/content/images/icons/map-pointers/fac-map-1.png" alt="" />
                                        @WebUtility.HtmlDecode(selectedService.Name)
                                    </legend>
                                    <p>@WebUtility.HtmlDecode(selectedService.Address)</p>
                                    <p>@WebUtility.HtmlDecode(selectedService.CurrentStatus)</p>

                                    @Html.HiddenFor(m => m.SessionId)
                                    @Html.HiddenFor(m => m.JourneyJson)
                                    @Html.HiddenFor(m => m.Id)
                                    @Html.Hidden("SelectedServiceId", @selectedService.Id)
                                    @Html.Hidden("SelectedServiceName", @selectedService.Name)
                                    @Html.Hidden("SelectedServiceAddress", @selectedService.Address)
                                    <button type="submit" class="button--next">Open in Google Maps</button>
                                </fieldset>
                            </div>
                        </div>
                    }
                </div>
            }

            <div class="section-item last">

                @if (Model.DosCheckCapacitySummaryResult.Success != null)
                {
                    var pointerNo = 1;
                    foreach (var service in Model.DosCheckCapacitySummaryResult.Success.Services.Skip(1))
                    {
                        using (Html.BeginForm("GetDirections", "Outcome", FormMethod.Post))
                        {
                            pointerNo++;
                            var pointerimageSrc = "/content/images/icons/map-pointers/fac-map-" + pointerNo.ToString() + ".png";
                            var pointerAlt = string.Format("Pointer {0}", pointerNo);
                            <div class="service-list-content">
                                <fieldset>
                                    <legend>
                                        <img src="@pointerimageSrc" alt="" />
                                        @WebUtility.HtmlDecode(service.Name)
                                    </legend>
                                    <p>@WebUtility.HtmlDecode(service.Address)</p>
                                    <p>@WebUtility.HtmlDecode(service.CurrentStatus)</p>

                                    @Html.HiddenFor(m => m.SessionId)
                                    @Html.HiddenFor(m => m.JourneyJson)
                                    @Html.HiddenFor(m => m.Id)
                                    @Html.Hidden("SelectedServiceId", @service.Id)
                                    @Html.Hidden("SelectedServiceName", @service.Name)
                                    @Html.Hidden("SelectedServiceAddress", @service.Address)
                                    <button type="submit" class="button--link button--next">Open in Google Maps</button>
                                </fieldset>
                            </div>
                        }
                    }
                }
            </div>

            <script type="text/javascript">

                var locations = [
                    @{ int i = 0; }
                    @if (Model.DosCheckCapacitySummaryResult.Success != null)
                {
                    foreach (var service in Model.DosCheckCapacitySummaryResult.Success.Services)
                    {


                        @Html.Raw("['" + service.Name + "',OsGridRef.osGridToLatLon(new OsGridRef(" + service.Eastings + ", " + service.Northings + "), LatLon.datum.OSGB36).lat, OsGridRef.osGridToLatLon(new OsGridRef(" + service.Eastings + ", " + service.Northings + "), LatLon.datum.OSGB36).lon, " + i + "],")
                        i++;
                    }
                }
                ];
            </script>

        </div>
        <div class="service-map"></div>

        <script type="text/javascript">

            var map = new google.maps.Map($('.service-map')[0],
            {
                zoom: 10,
                center: new google.maps.LatLng(locations[0][1], locations[0][2]),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            var infowindow = new google.maps.InfoWindow();

            var marker, i;

            for (i = 0; i < locations.length; i++) {
                var pointerNo = i + 1;
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                    map: map,
                    icon: "/content/images/icons/map-pointers/fac-map-" + pointerNo + ".png"
                });

                google.maps.event.addListener(marker,
                    'click',
                    (function (marker, i) {
                        return function () {
                            infowindow.setContent(locations[i][0]);
                            infowindow.open(map, marker);
                        }
                    })(marker, i));
            }
        </script>
    </div>
</section>
    -->
@Html.Partial("_WorseningAdvice", Model)

@Html.Partial("_CareAdvice", Model.CareAdvices, new ViewDataDictionary { { "Title", "What you can do in the meantime" } })
