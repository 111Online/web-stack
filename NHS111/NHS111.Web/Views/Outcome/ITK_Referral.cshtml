@using NHS111.Models.Models.Web
@model OutcomeViewModel
@{
    Layout = "~/Views/Shared/_LayoutNhsUk.cshtml";
    var error = Model.DosCheckCapacitySummaryResult.HasNoServices;
}

@section Title { Speak to a clinician }
<link href="~/content/css_NhsUk/disposition.css" media="screen" rel="stylesheet" type="text/css" />

@section Scripts {
    <script>
        var pageId = '@Model.Id';
        dataLayer = [
        {
            'virtualPageUrl': document.location.pathname + '/' + pageId,
            'virtualPageTitle': '@Model.TitleWithoutBullets'
        }];
    </script>
}

@section OuterSection {
    <div class="sub-header">
        <div class="sub-header-icon">
            <span class="tick">&#10003;</span>
            <p>You've finished your online assessment</p>
            <h2>@string.Format("We recommend that you {0} within {1}", Model.OutcomeGroup.Text, Model.TimeFrameText)</h2>
        </div>
    </div>
}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { PageId = Model.Id })
}

<h2>Let us contact a healthcare provider near you</h2>
<p>Please enter your details below to find a healthcare provider and they will contact you.</p>

@using (Html.BeginForm("ServiceList", "Outcome", FormMethod.Post))
{
    @Html.HiddenFor(x => Model.SessionId)
    @Html.HiddenFor(x => Model.Id)
    @Html.HiddenFor(x => Model.JourneyJson)
    @Html.HiddenFor(x => Model.PathwayId)
    @Html.HiddenFor(x => Model.PathwayNo)
    @Html.HiddenFor(x => Model.SymptomGroup)
    @Html.HiddenFor(x => Model.UserInfo.Age)
    @Html.HiddenFor(x => Model.UserInfo.Gender)
    @Html.HiddenFor(x => Model.SymptomDiscriminatorCode)
    @Html.HiddenFor(x => Model.Title)
    @Html.HiddenFor(x => x.TimeFrameText)
    @Html.Hidden("CurrentView", ((RazorView)ViewContext.View).ViewPath)
    for (int i = 0; i < Model.CollectedKeywords.Keywords.Count; i++)
    {
        @Html.HiddenFor(model => Model.CollectedKeywords.Keywords[i].Value)
        @Html.HiddenFor(model => Model.CollectedKeywords.Keywords[i].IsFromAnswer)
    }

    for (int i = 0; i < Model.CollectedKeywords.ExcludeKeywords.Count; i++)
    {
        @Html.HiddenFor(model => Model.CollectedKeywords.ExcludeKeywords[i].Value)
        @Html.HiddenFor(model => Model.CollectedKeywords.ExcludeKeywords[i].IsFromAnswer)
    }


    <div class="findservice">
        @if (error)
        {
        <p class="error">No results could be found for that postcode. Please check and try again.</p>
        }
        <label>
            Postcode of current location
            @Html.TextBoxFor(m => m.UserInfo.CurrentAddress.PostCode, new { @class = (error ? "error" : "") })
        </label>
    </div>
        <aside>
            <h3>Why we need this</h3>
            <p>
                So we can offer details of healthcare providers<br />available near to where you are right now.
            </p>
        </aside>


        @Html.Partial("_GpSearch", Model)

        <input class="button button-next" type="submit" name="DosResults" value="Find available healthcare providers" />

}
